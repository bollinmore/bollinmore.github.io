{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Never stop learning","title":"Home"},{"location":"#never-stop-learning","text":"","title":"Never stop learning"},{"location":"about/","text":"SuperQ Python/Flask/Chatbot c#/WinForm c++/wxWidgets c/Linux utilities BIOS tools","title":"About"},{"location":"about/#superq","text":"Python/Flask/Chatbot c#/WinForm c++/wxWidgets c/Linux utilities BIOS tools","title":"SuperQ"},{"location":"template/","text":"Source Topic : Constraints Concept Complexity Time Complexity Space Complexity Special test case Code","title":"Template"},{"location":"template/#_1","text":"Source Topic : Constraints","title":""},{"location":"template/#concept","text":"","title":"Concept"},{"location":"template/#complexity","text":"Time Complexity Space Complexity","title":"Complexity"},{"location":"template/#special-test-case","text":"","title":"Special test case"},{"location":"template/#code","text":"","title":"Code"},{"location":"BIOS/bios_tool/","text":"","title":"Category"},{"location":"BIOS/gpio/","text":"","title":"gpio"},{"location":"BIOS/i2c/","text":"pin definition There are two lines(SDA, SCL) in i 2 c protocol, the SDA is used to send/receive data, it's biredirectional, and SCL is the clock. The priciple of data transfer in i 2 c protocol: IDLE: Both SCL and SDA are keep in high state. SCL in high state, the data in SDA is valid and its value cannot be changed. The exceptions are: START: SDA from '1' to '0' STOP: SDA from '0' to '1' SCL in low state, the state of SDA is updatable. Packet format Reference material I2C\u7684\u4ecb\u7d39","title":"i2c"},{"location":"BIOS/i2c/#pin-definition","text":"There are two lines(SDA, SCL) in i 2 c protocol, the SDA is used to send/receive data, it's biredirectional, and SCL is the clock. The priciple of data transfer in i 2 c protocol: IDLE: Both SCL and SDA are keep in high state. SCL in high state, the data in SDA is valid and its value cannot be changed. The exceptions are: START: SDA from '1' to '0' STOP: SDA from '0' to '1' SCL in low state, the state of SDA is updatable.","title":"pin definition"},{"location":"BIOS/i2c/#packet-format","text":"","title":"Packet format"},{"location":"BIOS/i2c/#reference-material","text":"I2C\u7684\u4ecb\u7d39","title":"Reference material"},{"location":"BIOS/smbios/","text":"","title":"smbios"},{"location":"BIOS/uefi_capsule/","text":"","title":"Uefi capsule"},{"location":"BIOS/variable/","text":".var and .varrc comparision .var .varrc Generate VfrCompiler.exe VarCompiler.exe Purpose This file used to describe the UEFI variable defaults or a series of UEFI variable updates This file indicates the actual contents of UEFI Variable region or a series of changes that must be made to the UEFI variable region","title":"Variable"},{"location":"BIOS/variable/#var-and-varrc-comparision","text":".var .varrc Generate VfrCompiler.exe VarCompiler.exe Purpose This file used to describe the UEFI variable defaults or a series of UEFI variable updates This file indicates the actual contents of UEFI Variable region or a series of changes that must be made to the UEFI variable region","title":".var and .varrc comparision"},{"location":"docker/account/","text":"The default account will be root, however, this is not convinent when we use a container as a building environment, all the user and group id will be set to root:root in this case. Here are some useful commands to create a new user, it's also apply to traditional installation Ubuntu. Create a new user(superq) and a home directory useradd -m superq Set a password passwd superq Or set a empty password instead usermod -p U6aMy0wojraho superq Install sudo command and add this account to the sudoers file. apt install sudo -y Rather than modify /etc/sudoers directly, grant a user with sudo privilege with command below: usermod -G sudo -a superq","title":"Account"},{"location":"docker/cookbook/","text":"Examples Launch /bin/bash with interactive mode and mount ~proj to /tmp/xxx docker run --name test --rm -it -v c:\\users\\bolli\\proj:/tmp/xxx superq:latest /bin/bash Note: If --name test is not specified, docker enginer will generate a random name. The docker name is useful when removing a running container by docker stop Basic commands Get the CONTAINER ID from docker ps docker ps # List all running containers docker ps -a # List all containers(including stopped containers) Launch a bash in the specified container docker exec -it container id /bin/bash Build a image Read Dockerfile from current directory and build new image named superq docker build -t superq . --no-cache Commit changes Store the changes -a: Author -m: Commit message REPOSITORY[:TAG] docker commit -a \"SuperQ\" -m \"Install dotnet6, dos2unix\" b9a425aa0080 superq:v1 Simply overwrite current tag docker commit b9a425aa0080 superq:v1 Export / Load image from container Export to file from container docker save -o superq.tar superq Load from file docker load -i superq.tar","title":"Basic"},{"location":"docker/cookbook/#examples","text":"Launch /bin/bash with interactive mode and mount ~proj to /tmp/xxx docker run --name test --rm -it -v c:\\users\\bolli\\proj:/tmp/xxx superq:latest /bin/bash Note: If --name test is not specified, docker enginer will generate a random name. The docker name is useful when removing a running container by docker stop","title":"Examples"},{"location":"docker/cookbook/#basic-commands","text":"Get the CONTAINER ID from docker ps docker ps # List all running containers docker ps -a # List all containers(including stopped containers) Launch a bash in the specified container docker exec -it container id /bin/bash","title":"Basic commands"},{"location":"docker/cookbook/#build-a-image","text":"Read Dockerfile from current directory and build new image named superq docker build -t superq . --no-cache","title":"Build a image"},{"location":"docker/cookbook/#commit-changes","text":"Store the changes -a: Author -m: Commit message REPOSITORY[:TAG] docker commit -a \"SuperQ\" -m \"Install dotnet6, dos2unix\" b9a425aa0080 superq:v1 Simply overwrite current tag docker commit b9a425aa0080 superq:v1","title":"Commit changes"},{"location":"docker/cookbook/#export-load-image-from-container","text":"Export to file from container docker save -o superq.tar superq Load from file docker load -i superq.tar","title":"Export / Load image from container"},{"location":"docker/network/","text":"If we would like to start a service from a container and expose to external, the network configuration is essential knowledge. Port forward docker run -p : For example, add sub commands -p 8080:80 to the docker, it would map 80 port from container to 8080 in the host.","title":"Network"},{"location":"docker/rclone/","text":"Steps to mount Google Photos as local drive Create remote 1. rclone config => Refer to rclone manual 2. But in the step Use auto config? => type n The reason is because I was not able to open browser to retrieve authorization code in the docker, choose not to auto config will let you authorize rclone in your host. 3. Copy the codes and paste to the console. List photos 1. rclone lsd gdrive: Show the structure in the top directory. 2. Or rclone lsd gdrive:album to get all albums in the remote. 3. rclone ls gdrive:album/<name> will list all files in that album. 4. rclone copy gdrive:album/<name> <path to local drive> can download photos to local drive.","title":"RClone"},{"location":"docker/rclone/#steps-to-mount-google-photos-as-local-drive","text":"Create remote 1. rclone config => Refer to rclone manual 2. But in the step Use auto config? => type n The reason is because I was not able to open browser to retrieve authorization code in the docker, choose not to auto config will let you authorize rclone in your host. 3. Copy the codes and paste to the console. List photos 1. rclone lsd gdrive: Show the structure in the top directory. 2. Or rclone lsd gdrive:album to get all albums in the remote. 3. rclone ls gdrive:album/<name> will list all files in that album. 4. rclone copy gdrive:album/<name> <path to local drive> can download photos to local drive.","title":"Steps to mount Google Photos as local drive"},{"location":"git/cookbook/","text":"Frequently Used Command Submodule \u5982\u679c\u6709\u591a\u500bsubmodule\uff0c\u4e0d\u60f3\u56e0\u70ba\u5176\u4e2d\u4e00\u500bsubmodule\u57f7\u884c\u5f8c\u5f97\u5230\u975e\u96f6\u56de\u50b3\u503c\u800c\u4e2d\u6b62\u57f7\u884c\uff0c\u5b98\u7db2\u7684\u6559\u5b78\u662f\u8b93\u52a0\u4e0a || : \u5728\u6307\u4ee4\u5f8c\u9762\u3002 git submodule foreach ' run_some_cmd || :' Diff Exclude files from \"git diff\" git diff -- . ':(exclude)**/AssemblyInfo.cs' ':(exclude)**/*.dll' ':(exclude)**/*.exe'","title":"Git"},{"location":"git/cookbook/#frequently-used-command","text":"","title":"Frequently Used Command"},{"location":"git/cookbook/#submodule","text":"\u5982\u679c\u6709\u591a\u500bsubmodule\uff0c\u4e0d\u60f3\u56e0\u70ba\u5176\u4e2d\u4e00\u500bsubmodule\u57f7\u884c\u5f8c\u5f97\u5230\u975e\u96f6\u56de\u50b3\u503c\u800c\u4e2d\u6b62\u57f7\u884c\uff0c\u5b98\u7db2\u7684\u6559\u5b78\u662f\u8b93\u52a0\u4e0a || : \u5728\u6307\u4ee4\u5f8c\u9762\u3002 git submodule foreach ' run_some_cmd || :'","title":"Submodule"},{"location":"git/cookbook/#diff","text":"Exclude files from \"git diff\" git diff -- . ':(exclude)**/AssemblyInfo.cs' ':(exclude)**/*.dll' ':(exclude)**/*.exe'","title":"Diff"},{"location":"leetcode/array/find_pivot_index/","text":"Find Pivot Index Source Topic : Array, Prefix Sum Given an array of integers nums, calculate the pivot index of this array. The pivot index is the index where the sum of all the numbers strictly to the left of the index is equal to the sum of all the numbers strictly to the index's right. If the index is on the left edge of the array, then the left sum is 0 because there are no elements to the left. This also applies to the right edge of the array. Return the leftmost pivot index. If no such index exists, return -1. Constraints 1 <= nums.length <= 104 -1000 <= nums[i] <= 1000 Concept Since we know the sum of left part is equal to the right part, and the sum of all elements will not change, we could solve this problem by checking the left part and right part iteratively . How do we get the sum of right part? You'll get the sum by total - leftSum - pivot . Complexity Time Complexity O(n): O(n) for getting sum of all numbers; O(n) for checking the leftSum & rightSum. Space Complexity O(1) Special test case Code class Solution { public : int pivotIndex ( vector < int >& nums ) { int sz = nums . size (); int leftSum = 0 , total = 0 ; total = std :: accumulate ( nums . begin (), nums . end (), 0 ); //O(n) for ( int i = 0 ; i < sz ; i ++ ) { int rightSum = total - nums [ i ] - leftSum ; if ( leftSum == rightSum ) return i ; leftSum += nums [ i ]; } return -1 ; // not found } };","title":"724. Find Pivot Index"},{"location":"leetcode/array/find_pivot_index/#find-pivot-index","text":"Source Topic : Array, Prefix Sum Given an array of integers nums, calculate the pivot index of this array. The pivot index is the index where the sum of all the numbers strictly to the left of the index is equal to the sum of all the numbers strictly to the index's right. If the index is on the left edge of the array, then the left sum is 0 because there are no elements to the left. This also applies to the right edge of the array. Return the leftmost pivot index. If no such index exists, return -1. Constraints 1 <= nums.length <= 104 -1000 <= nums[i] <= 1000","title":"Find Pivot Index"},{"location":"leetcode/array/find_pivot_index/#concept","text":"Since we know the sum of left part is equal to the right part, and the sum of all elements will not change, we could solve this problem by checking the left part and right part iteratively . How do we get the sum of right part? You'll get the sum by total - leftSum - pivot .","title":"Concept"},{"location":"leetcode/array/find_pivot_index/#complexity","text":"Time Complexity O(n): O(n) for getting sum of all numbers; O(n) for checking the leftSum & rightSum. Space Complexity O(1)","title":"Complexity"},{"location":"leetcode/array/find_pivot_index/#special-test-case","text":"","title":"Special test case"},{"location":"leetcode/array/find_pivot_index/#code","text":"class Solution { public : int pivotIndex ( vector < int >& nums ) { int sz = nums . size (); int leftSum = 0 , total = 0 ; total = std :: accumulate ( nums . begin (), nums . end (), 0 ); //O(n) for ( int i = 0 ; i < sz ; i ++ ) { int rightSum = total - nums [ i ] - leftSum ; if ( leftSum == rightSum ) return i ; leftSum += nums [ i ]; } return -1 ; // not found } };","title":"Code"},{"location":"leetcode/array/gas_station/","text":"134. Gas Station Source There are n gas stations along a circular route, where the amount of gas at the ith station is gas[i]. You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from the ith station to its next (i + 1)th station. You begin the journey with an empty tank at one of the gas stations. Given two integer arrays gas and cost, return the starting gas station's index if you can travel around the circuit once in the clockwise direction, otherwise return -1. If there exists a solution, it is guaranteed to be unique Constraints gas.length == n cost.length == n 1 <= n <= 105 0 <= gas[i], cost[i] <= 104 Concept: One pass algorithm The basic idea is: The total gas must larger than total cost, otherwise there is no way to travel around the circuit. If the tank is less zero , we move the starting point to the next station. Why one pass works is because we assuming the oil is sufficient so we can always reset the starting point if tank + gas - cost < 0 Complexity Time Complexity O(n^2): We have a nested for-loop inside because we need to move root node. Space Complexity O(n): Extra space to hold the number of unique BST of N. Code: class Solution { public : int canCompleteCircuit ( vector < int >& gas , vector < int >& cost ) { /** 2022/1/21 -- O(n), O(1); One pass */ int tank = 0 ; int start = 0 , total_gas = 0 , total_cost = 0 ; for ( int i = 0 ; i < gas . size (); i ++ ) { total_gas += gas [ i ]; total_cost += cost [ i ]; tank += ( gas [ i ] - cost [ i ]); if ( tank < 0 ) { // start = i + 1 ; tank = 0 ; } } return ( total_gas >= total_cost ) ? start : -1 ; } };","title":"134. Gas Station"},{"location":"leetcode/array/gas_station/#134-gas-station","text":"Source There are n gas stations along a circular route, where the amount of gas at the ith station is gas[i]. You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from the ith station to its next (i + 1)th station. You begin the journey with an empty tank at one of the gas stations. Given two integer arrays gas and cost, return the starting gas station's index if you can travel around the circuit once in the clockwise direction, otherwise return -1. If there exists a solution, it is guaranteed to be unique Constraints gas.length == n cost.length == n 1 <= n <= 105 0 <= gas[i], cost[i] <= 104","title":"134. Gas Station"},{"location":"leetcode/array/gas_station/#concept","text":"One pass algorithm The basic idea is: The total gas must larger than total cost, otherwise there is no way to travel around the circuit. If the tank is less zero , we move the starting point to the next station. Why one pass works is because we assuming the oil is sufficient so we can always reset the starting point if tank + gas - cost < 0","title":"Concept:"},{"location":"leetcode/array/gas_station/#complexity","text":"Time Complexity O(n^2): We have a nested for-loop inside because we need to move root node. Space Complexity O(n): Extra space to hold the number of unique BST of N.","title":"Complexity"},{"location":"leetcode/array/gas_station/#code","text":"class Solution { public : int canCompleteCircuit ( vector < int >& gas , vector < int >& cost ) { /** 2022/1/21 -- O(n), O(1); One pass */ int tank = 0 ; int start = 0 , total_gas = 0 , total_cost = 0 ; for ( int i = 0 ; i < gas . size (); i ++ ) { total_gas += gas [ i ]; total_cost += cost [ i ]; tank += ( gas [ i ] - cost [ i ]); if ( tank < 0 ) { // start = i + 1 ; tank = 0 ; } } return ( total_gas >= total_cost ) ? start : -1 ; } };","title":"Code:"},{"location":"leetcode/array/partition_array_into_three_parts_with_equal_sum/","text":"1013. Partition Array Into Three Parts With Equal Sum Source Topic : Array, Greedy Given an array of integers arr, return true if we can partition the array into three non-empty parts with equal sums. Formally, we can partition the array if we can find indexes i + 1 < j with (arr[0] + arr[1] + ... + arr[i] == arr[i + 1] + arr[i + 2] + ... + arr[j - 1] == arr[j] + arr[j + 1] + ... + arr[arr.length - 1]) Constraints 3 <= arr.length <= 5 * 104 -104 <= arr[i] <= 104 Concept The basic idea is to sum up a range of value and check if it is equal to total/3 , we'll Increase part variable if the condiction meet. Finally, return true if part>=3 , why? Because every single equal to total/3 also add one to part . Complexity Time Complexity O(n) Space Complexity O(1) Special test case [1,-1,1,-1] => Sum is zero will cause sum % (total/3) get divided by zero exception [1,1,1,1] Code class Solution { public : bool canThreePartsEqualSum ( vector < int >& arr ) { int total = std :: accumulate ( arr . begin (), arr . end (), 0 ); //O(n) int sz = arr . size (); int sum = 0 , part = 0 ; if ( total % 3 != 0 ) return false ; for ( int i = 0 ; i < sz ; i ++ ) { sum += arr [ i ]; if ( sum == total / 3 ) { part ++ ; sum = 0 ; } } return part >= 3 ; // '>=' is used to filter out a single value which satisfied `sum==total/3` that will increase the value of part } };","title":"1013. Partition Array Into Three Parts With Equal Sum"},{"location":"leetcode/array/partition_array_into_three_parts_with_equal_sum/#1013-partition-array-into-three-parts-with-equal-sum","text":"Source Topic : Array, Greedy Given an array of integers arr, return true if we can partition the array into three non-empty parts with equal sums. Formally, we can partition the array if we can find indexes i + 1 < j with (arr[0] + arr[1] + ... + arr[i] == arr[i + 1] + arr[i + 2] + ... + arr[j - 1] == arr[j] + arr[j + 1] + ... + arr[arr.length - 1]) Constraints 3 <= arr.length <= 5 * 104 -104 <= arr[i] <= 104","title":"1013. Partition Array Into Three Parts With Equal Sum"},{"location":"leetcode/array/partition_array_into_three_parts_with_equal_sum/#concept","text":"The basic idea is to sum up a range of value and check if it is equal to total/3 , we'll Increase part variable if the condiction meet. Finally, return true if part>=3 , why? Because every single equal to total/3 also add one to part .","title":"Concept"},{"location":"leetcode/array/partition_array_into_three_parts_with_equal_sum/#complexity","text":"Time Complexity O(n) Space Complexity O(1)","title":"Complexity"},{"location":"leetcode/array/partition_array_into_three_parts_with_equal_sum/#special-test-case","text":"[1,-1,1,-1] => Sum is zero will cause sum % (total/3) get divided by zero exception [1,1,1,1]","title":"Special test case"},{"location":"leetcode/array/partition_array_into_three_parts_with_equal_sum/#code","text":"class Solution { public : bool canThreePartsEqualSum ( vector < int >& arr ) { int total = std :: accumulate ( arr . begin (), arr . end (), 0 ); //O(n) int sz = arr . size (); int sum = 0 , part = 0 ; if ( total % 3 != 0 ) return false ; for ( int i = 0 ; i < sz ; i ++ ) { sum += arr [ i ]; if ( sum == total / 3 ) { part ++ ; sum = 0 ; } } return part >= 3 ; // '>=' is used to filter out a single value which satisfied `sum==total/3` that will increase the value of part } };","title":"Code"},{"location":"leetcode/binary_search/guess_number_higher_or_lower/","text":"374. Guess Number Higher or Lower Source Topic : Binary Search We are playing the Guess Game. The game is as follows: I pick a number from 1 to n. You have to guess which number I picked. Every time you guess wrong, I will tell you whether the number I picked is higher or lower than your guess. You call a pre-defined API int guess(int num), which returns three possible results: -1: Your guess is higher than the number I picked (i.e. num > pick). 1: Your guess is lower than the number I picked (i.e. num < pick). 0: your guess is equal to the number I picked (i.e. num == pick). Return the number that I picked. Constraints 1 <= n <= 231 - 1 1 <= pick <= n Concept The idea is similar to Binary Search because we'll move the mid based on what guess() return, when: guess(m) > 0 => set l = m+1 guess(m) < 0 => set r = m-1 guess(m) == 0 => Found answer We could use the condition while(l<=r) or while(true) because we're ensure to find answer. Complexity Time Complexity O(logn) Space Complexity O(1) Special test case 2126753390 1702766719 The above case will cause buffer overflow exception if our expression is (r+l)/2 . Code /** * Forward declaration of guess API. * @param num your guess * @return -1 if num is lower than the guess number * 1 if num is higher than the guess number * otherwise return 0 * int guess(int num); */ class Solution { public : int guessNumber ( int n ) { int l = 0 , r = n ; while ( l <= r ) { int m = ( r - l ) / 2 + l ; // Note: (r+l)/2 will cause buffer overflow exception int ret = guess ( m ); if ( ret > 0 ) l = m + 1 ; else if ( ret < 0 ) r = m -1 ; else return m ; } return -1 ; } };","title":"374. Guess Number Higher or Lower"},{"location":"leetcode/binary_search/guess_number_higher_or_lower/#374-guess-number-higher-or-lower","text":"Source Topic : Binary Search We are playing the Guess Game. The game is as follows: I pick a number from 1 to n. You have to guess which number I picked. Every time you guess wrong, I will tell you whether the number I picked is higher or lower than your guess. You call a pre-defined API int guess(int num), which returns three possible results: -1: Your guess is higher than the number I picked (i.e. num > pick). 1: Your guess is lower than the number I picked (i.e. num < pick). 0: your guess is equal to the number I picked (i.e. num == pick). Return the number that I picked. Constraints 1 <= n <= 231 - 1 1 <= pick <= n","title":"374. Guess Number Higher or Lower"},{"location":"leetcode/binary_search/guess_number_higher_or_lower/#concept","text":"The idea is similar to Binary Search because we'll move the mid based on what guess() return, when: guess(m) > 0 => set l = m+1 guess(m) < 0 => set r = m-1 guess(m) == 0 => Found answer We could use the condition while(l<=r) or while(true) because we're ensure to find answer.","title":"Concept"},{"location":"leetcode/binary_search/guess_number_higher_or_lower/#complexity","text":"Time Complexity O(logn) Space Complexity O(1)","title":"Complexity"},{"location":"leetcode/binary_search/guess_number_higher_or_lower/#special-test-case","text":"2126753390 1702766719 The above case will cause buffer overflow exception if our expression is (r+l)/2 .","title":"Special test case"},{"location":"leetcode/binary_search/guess_number_higher_or_lower/#code","text":"/** * Forward declaration of guess API. * @param num your guess * @return -1 if num is lower than the guess number * 1 if num is higher than the guess number * otherwise return 0 * int guess(int num); */ class Solution { public : int guessNumber ( int n ) { int l = 0 , r = n ; while ( l <= r ) { int m = ( r - l ) / 2 + l ; // Note: (r+l)/2 will cause buffer overflow exception int ret = guess ( m ); if ( ret > 0 ) l = m + 1 ; else if ( ret < 0 ) r = m -1 ; else return m ; } return -1 ; } };","title":"Code"},{"location":"leetcode/dp/jump_game/","text":"Jump Game Source You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position. Return true if you can reach the last index, or false otherwise. Constraints 1 <= nums.length <= 104 0 <= nums[i] <= 105 Concept The idea is to iterate entire loop and set variable reach by max(reach, i+nums[i]) , when the indexer i exceed reach which means we couldn't jump to the end with current value. Code class Solution { public : bool canJump ( vector < int >& nums ) { /** 2022/1/6 -- O(N), O(1); Greedy */ int n = nums . size (); if ( n == 1 ) return true ; int i = 0 ; for ( int reach = 0 ; i < n && i <= reach ; i ++ ) { // We add `i<=reach` to let i escape from loop earlier reach = max ( reach , i + nums [ i ]); } return i == n ; } };","title":"55. Jump Game"},{"location":"leetcode/dp/jump_game/#jump-game","text":"Source You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position. Return true if you can reach the last index, or false otherwise. Constraints 1 <= nums.length <= 104 0 <= nums[i] <= 105","title":"Jump Game"},{"location":"leetcode/dp/jump_game/#concept","text":"The idea is to iterate entire loop and set variable reach by max(reach, i+nums[i]) , when the indexer i exceed reach which means we couldn't jump to the end with current value.","title":"Concept"},{"location":"leetcode/dp/jump_game/#code","text":"class Solution { public : bool canJump ( vector < int >& nums ) { /** 2022/1/6 -- O(N), O(1); Greedy */ int n = nums . size (); if ( n == 1 ) return true ; int i = 0 ; for ( int reach = 0 ; i < n && i <= reach ; i ++ ) { // We add `i<=reach` to let i escape from loop earlier reach = max ( reach , i + nums [ i ]); } return i == n ; } };","title":"Code"},{"location":"leetcode/dp/jump_game2/","text":"Jump Game II Source Given an array of non-negative integers nums, you are initially positioned at the first index of the array. Each element in the array represents your maximum jump length at that position. Your goal is to reach the last index in the minimum number of jumps. You can assume that you can always reach the last index. Constraints 1 <= nums.length <= 104 0 <= nums[i] <= 1000 Concept: Code:","title":"45. Jump Game II"},{"location":"leetcode/dp/jump_game2/#jump-game-ii","text":"Source Given an array of non-negative integers nums, you are initially positioned at the first index of the array. Each element in the array represents your maximum jump length at that position. Your goal is to reach the last index in the minimum number of jumps. You can assume that you can always reach the last index. Constraints 1 <= nums.length <= 104 0 <= nums[i] <= 1000","title":"Jump Game II"},{"location":"leetcode/dp/jump_game2/#concept","text":"","title":"Concept:"},{"location":"leetcode/dp/jump_game2/#code","text":"","title":"Code:"},{"location":"leetcode/dp/linked_list_cycle2/","text":"142. Linked List Cycle II Source Given the head of a linked list, return the node where the cycle begins. If there is no cycle, return null. There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail's next pointer is connected to (0-indexed). It is -1 if there is no cycle. Note that pos is not passed as a parameter. Do not modify the linked list. Constraints The number of the nodes in the list is in the range [0, 104]. -105 <= Node.val <= 105 pos is -1 or a valid index in the linked-list. Concept: O(1) space complexity Since. (2S = F) consider the part from start - cycle point = A, cycle point- intersect = B, intersect - cycle point = C then slow trival A + B fast travel A + (B+C) * N + B (B+C) is one cycle and * N number we travel the cycles from 2S = F we know (B+C)*N = A + B from (B+C)*N = A + B if we remove B from each side B * (N-1) + C * N = A. then A must be equal to C or eqaul to X * C + Y * B where (X - Y = 1) In other words A mod(B+C) = C. A = B(N-1)+CN =B(N-1)+C(N-1)+C=(B+C)(N-1)+C As a result when we travel from start to point takes A to cycle points and Intersect to cycle points will be same distance or travel M cycles then reach to cycle points (from A mod(b+c) = C); (thats is why we set 1 ptr at start and 1 at intersect and trival at same rate.) Code: /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public : ListNode * detectCycle ( ListNode * head ) { ListNode * slow = head , * fast = head ; while ( slow && fast && fast -> next ) { slow = slow -> next ; fast = fast -> next -> next ; if ( slow == fast ) { ListNode * start = head ; while ( slow != start ) { start = start -> next ; slow = slow -> next ; } return start ; } } return nullptr ; } };","title":"142. Linked List Cycle II"},{"location":"leetcode/dp/linked_list_cycle2/#142-linked-list-cycle-ii","text":"Source Given the head of a linked list, return the node where the cycle begins. If there is no cycle, return null. There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail's next pointer is connected to (0-indexed). It is -1 if there is no cycle. Note that pos is not passed as a parameter. Do not modify the linked list. Constraints The number of the nodes in the list is in the range [0, 104]. -105 <= Node.val <= 105 pos is -1 or a valid index in the linked-list.","title":"142. Linked List Cycle II"},{"location":"leetcode/dp/linked_list_cycle2/#concept","text":"O(1) space complexity Since. (2S = F) consider the part from start - cycle point = A, cycle point- intersect = B, intersect - cycle point = C then slow trival A + B fast travel A + (B+C) * N + B (B+C) is one cycle and * N number we travel the cycles from 2S = F we know (B+C)*N = A + B from (B+C)*N = A + B if we remove B from each side B * (N-1) + C * N = A. then A must be equal to C or eqaul to X * C + Y * B where (X - Y = 1) In other words A mod(B+C) = C. A = B(N-1)+CN =B(N-1)+C(N-1)+C=(B+C)(N-1)+C As a result when we travel from start to point takes A to cycle points and Intersect to cycle points will be same distance or travel M cycles then reach to cycle points (from A mod(b+c) = C); (thats is why we set 1 ptr at start and 1 at intersect and trival at same rate.)","title":"Concept:"},{"location":"leetcode/dp/linked_list_cycle2/#code","text":"/** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public : ListNode * detectCycle ( ListNode * head ) { ListNode * slow = head , * fast = head ; while ( slow && fast && fast -> next ) { slow = slow -> next ; fast = fast -> next -> next ; if ( slow == fast ) { ListNode * start = head ; while ( slow != start ) { start = start -> next ; slow = slow -> next ; } return start ; } } return nullptr ; } };","title":"Code:"},{"location":"leetcode/dp/minimum_path_sum/","text":"64. Minimum Path Sum Source Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path. Note: You can only move either down or right at any point in time. Constraints m == grid.length n == grid[i].length 1 <= m, n <= 200 0 <= grid[i][j] <= 100 Concept The idea is similar to Unique Paths problem, but we use a two dimension array with size m+1 x n+1. The reason that adding one to m & n is to compare value between extended cell with incoming grid. What we do to find out the solution is implement as below: Create a two dimension array a[m+1][n+1] Initialize the last row and column to all INT_MAX . (Here is a common straegy to find out the minimum from two values.) Set a[m][n-1] to zero because we want to get the smallest value in the first time. Iterate cell starting from the last cell in the grid. Find out the smaller value from the two adjacent nodes(right/down) and plus current cell. Repeat this step until we reach the first cell in the grid. The final answer is in a[0][0] Complexity Time Complexity O(m*n): We iterate the table, the size of table is m rows multiplies n * columns. Space Complexity O(m*n): An extra space to hold the value when calculating the minimum path. Code class Solution { public : int minPathSum ( vector < vector < int >>& grid ) { /** 2022/1/7 -- 8ms, 9.8mb; O(m*n), O(m*n); DP, Copy cat */ int m = grid . size (), n = grid [ 0 ]. size (); int rec [ m + 1 ][ n + 1 ]; for ( int i = 0 ; i < n ; i ++ ) rec [ m ][ i ] = INT_MAX ; for ( int i = 0 ; i < m ; i ++ ) rec [ i ][ n ] = INT_MAX ; rec [ m ][ n -1 ] = 0 ; // Either `rec[m][n-1] = 0` or `rec[m-1][n] = 0` could let the min() work. for ( int i = m -1 ; i >= 0 ; i -- ) { for ( int j = n -1 ; j >= 0 ; j -- ) { rec [ i ][ j ] = grid [ i ][ j ] + min ( rec [ i + 1 ][ j ], rec [ i ][ j + 1 ]); } } return rec [ 0 ][ 0 ]; } };","title":"64. Minimum Path Sum"},{"location":"leetcode/dp/minimum_path_sum/#64-minimum-path-sum","text":"Source Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path. Note: You can only move either down or right at any point in time. Constraints m == grid.length n == grid[i].length 1 <= m, n <= 200 0 <= grid[i][j] <= 100","title":"64. Minimum Path Sum"},{"location":"leetcode/dp/minimum_path_sum/#concept","text":"The idea is similar to Unique Paths problem, but we use a two dimension array with size m+1 x n+1. The reason that adding one to m & n is to compare value between extended cell with incoming grid. What we do to find out the solution is implement as below: Create a two dimension array a[m+1][n+1] Initialize the last row and column to all INT_MAX . (Here is a common straegy to find out the minimum from two values.) Set a[m][n-1] to zero because we want to get the smallest value in the first time. Iterate cell starting from the last cell in the grid. Find out the smaller value from the two adjacent nodes(right/down) and plus current cell. Repeat this step until we reach the first cell in the grid. The final answer is in a[0][0]","title":"Concept"},{"location":"leetcode/dp/minimum_path_sum/#complexity","text":"Time Complexity O(m*n): We iterate the table, the size of table is m rows multiplies n * columns. Space Complexity O(m*n): An extra space to hold the value when calculating the minimum path.","title":"Complexity"},{"location":"leetcode/dp/minimum_path_sum/#code","text":"class Solution { public : int minPathSum ( vector < vector < int >>& grid ) { /** 2022/1/7 -- 8ms, 9.8mb; O(m*n), O(m*n); DP, Copy cat */ int m = grid . size (), n = grid [ 0 ]. size (); int rec [ m + 1 ][ n + 1 ]; for ( int i = 0 ; i < n ; i ++ ) rec [ m ][ i ] = INT_MAX ; for ( int i = 0 ; i < m ; i ++ ) rec [ i ][ n ] = INT_MAX ; rec [ m ][ n -1 ] = 0 ; // Either `rec[m][n-1] = 0` or `rec[m-1][n] = 0` could let the min() work. for ( int i = m -1 ; i >= 0 ; i -- ) { for ( int j = n -1 ; j >= 0 ; j -- ) { rec [ i ][ j ] = grid [ i ][ j ] + min ( rec [ i + 1 ][ j ], rec [ i ][ j + 1 ]); } } return rec [ 0 ][ 0 ]; } };","title":"Code"},{"location":"leetcode/dp/unique_binary_search_trees/","text":"96. Unique Binary Search Trees Source Given an integer n, return the number of structurally unique BST's (binary search trees) which has exactly n nodes of unique values from 1 to n. Constraints 1 <= n <= 19 Concept: The idea is to solve sub problem in dynamic programming. When n = 0 or n = 1 , there's 1 possible BST exists. But when the n >= 2 that means we could break down this problem into sub problem as below: n==2: left nodes + root + right nodes 2 1 / or \\ 1 2 So we can turn this problem into Find out the combination while iterate the nodes, the formula of each combination will be numTrees(left) * numTrees(right) , then we can sum up the number because we want to know how many unique BST exists for N. Complexity Time Complexity O(n^2): We have a nested for-loop inside because we need to move root node. Space Complexity O(n): Extra space to hold the number of unique BST of N. Code: class Solution { public : int numTrees ( int n ) { if ( n <= 1 ) return 1 ; vector < int > dp ( n + 1 , 1 ); // 0-> 1; 1->1 for ( int nodes = 2 ; nodes <= n ; nodes ++ ) { int total = 0 ; for ( int root = 1 ; root <= nodes ; root ++ ) { int left = root - 1 ; int right = nodes - root ; total += dp [ left ] * dp [ right ]; } dp [ nodes ] = total ; } return dp . back (); } };","title":"96. Unique Binary Search Trees"},{"location":"leetcode/dp/unique_binary_search_trees/#96-unique-binary-search-trees","text":"Source Given an integer n, return the number of structurally unique BST's (binary search trees) which has exactly n nodes of unique values from 1 to n. Constraints 1 <= n <= 19","title":"96. Unique Binary Search Trees"},{"location":"leetcode/dp/unique_binary_search_trees/#concept","text":"The idea is to solve sub problem in dynamic programming. When n = 0 or n = 1 , there's 1 possible BST exists. But when the n >= 2 that means we could break down this problem into sub problem as below: n==2: left nodes + root + right nodes 2 1 / or \\ 1 2 So we can turn this problem into Find out the combination while iterate the nodes, the formula of each combination will be numTrees(left) * numTrees(right) , then we can sum up the number because we want to know how many unique BST exists for N.","title":"Concept:"},{"location":"leetcode/dp/unique_binary_search_trees/#complexity","text":"Time Complexity O(n^2): We have a nested for-loop inside because we need to move root node. Space Complexity O(n): Extra space to hold the number of unique BST of N.","title":"Complexity"},{"location":"leetcode/dp/unique_binary_search_trees/#code","text":"class Solution { public : int numTrees ( int n ) { if ( n <= 1 ) return 1 ; vector < int > dp ( n + 1 , 1 ); // 0-> 1; 1->1 for ( int nodes = 2 ; nodes <= n ; nodes ++ ) { int total = 0 ; for ( int root = 1 ; root <= nodes ; root ++ ) { int left = root - 1 ; int right = nodes - root ; total += dp [ left ] * dp [ right ]; } dp [ nodes ] = total ; } return dp . back (); } };","title":"Code:"},{"location":"leetcode/dp/unique_paths/","text":"62. Unique Paths Source There is a robot on an m x n grid. The robot is initially located at the top-left corner (i.e., grid[0][0]). The robot tries to move to the bottom-right corner (i.e., grid[m - 1][n - 1]). The robot can only move either down or right at any point in time. Given the two integers m and n, return the number of possible unique paths that the robot can take to reach the bottom-right corner. The test cases are generated so that the answer will be less than or equal to 2 * 109. Constraints 1 <= m, n <= 100 Concept: 28 21 15 10 6 3 1 7 6 5 4 3 2 1 1 1 1 1 1 1 1 The idea is is to solve sub problem start from the bottom-right: Create a 2D array to hold every possible path to the desitination. Set the value of bottom row to all 1 because there's only one way to each cell. Sum up the value in right & bottom of each cell => It shows how much ways to the destination starting from current cell. We'd get final answer at grid[0][0] Complexity Time Complexity O(m*n): We iterate the table, the size of table is m rows multiplies n * columns. Space Complexity O(n): We use a vector to hold the date of previous row, and update it when we finish iterating current row. Code: class Solution { public : int uniquePaths ( int m , int n ) { /** 2022/1/6 -- 7ms, 6.3mb; O(m*n), O(n); DP */ vector < int > vx ( n , 1 ); // n * 1 for ( int i = 0 ; i < m -1 ; i ++ ) { // Because we've set the bottom row to all 1 vector < int > vNew ( n , 1 ); // Since we want the last element become 1 for ( int j = n -2 ; j >= 0 ; j -- ) { // Because the last column is always 1 vNew [ j ] = vNew [ j + 1 ] + vx [ j ]; } vx . assign ( vNew . begin (), vNew . end ()); } return vx [ 0 ]; } };","title":"62. Unique Paths"},{"location":"leetcode/dp/unique_paths/#62-unique-paths","text":"Source There is a robot on an m x n grid. The robot is initially located at the top-left corner (i.e., grid[0][0]). The robot tries to move to the bottom-right corner (i.e., grid[m - 1][n - 1]). The robot can only move either down or right at any point in time. Given the two integers m and n, return the number of possible unique paths that the robot can take to reach the bottom-right corner. The test cases are generated so that the answer will be less than or equal to 2 * 109. Constraints 1 <= m, n <= 100","title":"62. Unique Paths"},{"location":"leetcode/dp/unique_paths/#concept","text":"28 21 15 10 6 3 1 7 6 5 4 3 2 1 1 1 1 1 1 1 1 The idea is is to solve sub problem start from the bottom-right: Create a 2D array to hold every possible path to the desitination. Set the value of bottom row to all 1 because there's only one way to each cell. Sum up the value in right & bottom of each cell => It shows how much ways to the destination starting from current cell. We'd get final answer at grid[0][0]","title":"Concept:"},{"location":"leetcode/dp/unique_paths/#complexity","text":"Time Complexity O(m*n): We iterate the table, the size of table is m rows multiplies n * columns. Space Complexity O(n): We use a vector to hold the date of previous row, and update it when we finish iterating current row.","title":"Complexity"},{"location":"leetcode/dp/unique_paths/#code","text":"class Solution { public : int uniquePaths ( int m , int n ) { /** 2022/1/6 -- 7ms, 6.3mb; O(m*n), O(n); DP */ vector < int > vx ( n , 1 ); // n * 1 for ( int i = 0 ; i < m -1 ; i ++ ) { // Because we've set the bottom row to all 1 vector < int > vNew ( n , 1 ); // Since we want the last element become 1 for ( int j = n -2 ; j >= 0 ; j -- ) { // Because the last column is always 1 vNew [ j ] = vNew [ j + 1 ] + vx [ j ]; } vx . assign ( vNew . begin (), vNew . end ()); } return vx [ 0 ]; } };","title":"Code:"},{"location":"leetcode/hash_table/contains_duplicate2/","text":"219. Contains Duplicate II Source Topic : Hash Table, Sliding Window Given an integer array nums and an integer k, return true if there are two distinct indices i and j in the array such that nums[i] == nums[j] and abs(i - j) <= k. Constraints 1 <= nums.length <= 105 -109 <= nums[i] <= 109 0 <= k <= 105 Concept Map Unlikely to #217, we set the offset as the value rather than occurence, so we can add or update the offset if the key is not exist. Otherwise, we can calculate the difference from current index to mp[nums[i]] , and return true if it's less than k . Set Using set as a container to simulate the sliding window because we only care about those value index i to i-k+1 , so the key point is to erase the out bound value by st.erase(nums[i-k-1]) . The reason to specify a value with offset i-k-1 is because the insert operation will put new value at the front of container, so we can't erase the first. Complexity Time Complexity Map: O(n) Set: O(n), either st.erase & outer loop may take linear time complexity. Space Complexity Map: O(n) Set: O(n) Special test case Code Map bool containsNearbyDuplicate ( vector < int >& nums , int k ) { map < int , int > mp ; int len = nums . size (); for ( int i = 0 ; i < len ; i ++ ) { int v = nums [ i ]; if ( ! mp . count ( v ) || i - mp [ v ] > k ) mp [ nums [ i ]] = i ; else return true ; } return false ; } Set bool containsNearbyDuplicate ( vector < int >& nums , int k ) { int len = nums . size (); unordered_set < int > st ; for ( int i = 0 ; i < len ; i ++ ) { if ( i > k ) st . erase ( nums [ i - k -1 ]); if ( st . find ( nums [ i ]) != st . end ()) return true ; st . insert ( nums [ i ]); } return false ; }","title":"219. Contains Duplicate II"},{"location":"leetcode/hash_table/contains_duplicate2/#219-contains-duplicate-ii","text":"Source Topic : Hash Table, Sliding Window Given an integer array nums and an integer k, return true if there are two distinct indices i and j in the array such that nums[i] == nums[j] and abs(i - j) <= k. Constraints 1 <= nums.length <= 105 -109 <= nums[i] <= 109 0 <= k <= 105","title":"219. Contains Duplicate II"},{"location":"leetcode/hash_table/contains_duplicate2/#concept","text":"Map Unlikely to #217, we set the offset as the value rather than occurence, so we can add or update the offset if the key is not exist. Otherwise, we can calculate the difference from current index to mp[nums[i]] , and return true if it's less than k . Set Using set as a container to simulate the sliding window because we only care about those value index i to i-k+1 , so the key point is to erase the out bound value by st.erase(nums[i-k-1]) . The reason to specify a value with offset i-k-1 is because the insert operation will put new value at the front of container, so we can't erase the first.","title":"Concept"},{"location":"leetcode/hash_table/contains_duplicate2/#complexity","text":"Time Complexity Map: O(n) Set: O(n), either st.erase & outer loop may take linear time complexity. Space Complexity Map: O(n) Set: O(n)","title":"Complexity"},{"location":"leetcode/hash_table/contains_duplicate2/#special-test-case","text":"","title":"Special test case"},{"location":"leetcode/hash_table/contains_duplicate2/#code","text":"Map bool containsNearbyDuplicate ( vector < int >& nums , int k ) { map < int , int > mp ; int len = nums . size (); for ( int i = 0 ; i < len ; i ++ ) { int v = nums [ i ]; if ( ! mp . count ( v ) || i - mp [ v ] > k ) mp [ nums [ i ]] = i ; else return true ; } return false ; } Set bool containsNearbyDuplicate ( vector < int >& nums , int k ) { int len = nums . size (); unordered_set < int > st ; for ( int i = 0 ; i < len ; i ++ ) { if ( i > k ) st . erase ( nums [ i - k -1 ]); if ( st . find ( nums [ i ]) != st . end ()) return true ; st . insert ( nums [ i ]); } return false ; }","title":"Code"},{"location":"leetcode/hash_table/group_anagrams/","text":"49. Group Anagrams Source Given an array of strings strs, group the anagrams together. You can return the answer in any order. An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Constraints 1 <= strs.length <= 104 0 <= strs[i].length <= 100 strs[i] consists of lowercase English letters. Concept Sorting The idea is to sort incoming string and set as a key in the map. Once we find out a key exists, then append the orginal string to the value. Complexity Time Complexity O(n * klogk): n is the lenght of strs and k is the string size. Space Complexity O(n * k) Code class Solution { public : vector < vector < string >> groupAnagrams ( vector < string >& strs ) { vector < vector < string >> ans ; unordered_map < string , vector < string >> m ; for ( auto s : strs ) { string s1 = s ; sort ( s1 . begin (), s1 . end ()); m [ s1 ]. push_back ( s ); } for ( auto x : m ) { ans . push_back ( x . second ); } return ans ; } };","title":"49. Group Anagrams"},{"location":"leetcode/hash_table/group_anagrams/#49-group-anagrams","text":"Source Given an array of strings strs, group the anagrams together. You can return the answer in any order. An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. Constraints 1 <= strs.length <= 104 0 <= strs[i].length <= 100 strs[i] consists of lowercase English letters.","title":"49. Group Anagrams"},{"location":"leetcode/hash_table/group_anagrams/#concept","text":"Sorting The idea is to sort incoming string and set as a key in the map. Once we find out a key exists, then append the orginal string to the value.","title":"Concept"},{"location":"leetcode/hash_table/group_anagrams/#complexity","text":"Time Complexity O(n * klogk): n is the lenght of strs and k is the string size. Space Complexity O(n * k)","title":"Complexity"},{"location":"leetcode/hash_table/group_anagrams/#code","text":"class Solution { public : vector < vector < string >> groupAnagrams ( vector < string >& strs ) { vector < vector < string >> ans ; unordered_map < string , vector < string >> m ; for ( auto s : strs ) { string s1 = s ; sort ( s1 . begin (), s1 . end ()); m [ s1 ]. push_back ( s ); } for ( auto x : m ) { ans . push_back ( x . second ); } return ans ; } };","title":"Code"},{"location":"leetcode/math/add_two_numbers/","text":"2. Add Two Numbers Source You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list. You may assume the two numbers do not contain any leading zero, except the number 0 itself. Constraints The number of nodes in each linked list is in the range [1, 100]. 0 <= Node.val <= 9 It is guaranteed that the list represents a number that does not have leading zeros. Concept: Algorithm: Create a dummy node and a pointer curr which point to the dummy node. Create a variable carry as a flag to know if there's a carry bit been set. Visit l1 & l2 iterately, sum up l1 or l2 if it's not null. We need to add carry if it present' Update the carry flag by set carry=sum/10 every time. Create a new node with value tmp%10 and let curr point to that address. Move pointer curr to the next by curr = curr->next Repeart until l1 & l2 are visited both. Remember to create a new node if the carry flag is set. Complexity Time Complexity O(n): Where n is max(l1.length, l2.length). Space Complexity O(n): Where n is max(l1.length, l2.length). Code: /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * addTwoNumbers ( ListNode * l1 , ListNode * l2 ) { ListNode * p = l1 , * q = l2 , * dummy , * curr ; int carry = 0 ; dummy = new ListNode (); curr = dummy ; // a pointer to the dummy node while ( p || q ) { int tmp = 0 + carry ; if ( p ) tmp += p -> val ; if ( q ) tmp += q -> val ; carry = tmp / 10 ; curr -> next = new ListNode ( tmp % 10 ); // make link to the dummy curr = curr -> next ; // move curr pointer to next one if ( p ) p = p -> next ; if ( q ) q = q -> next ; } if ( carry ) // ethier 0 or 1 curr -> next = new ListNode ( carry ); return dummy -> next ; } };","title":"2. Add Two Numbers"},{"location":"leetcode/math/add_two_numbers/#2-add-two-numbers","text":"Source You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list. You may assume the two numbers do not contain any leading zero, except the number 0 itself. Constraints The number of nodes in each linked list is in the range [1, 100]. 0 <= Node.val <= 9 It is guaranteed that the list represents a number that does not have leading zeros.","title":"2. Add Two Numbers"},{"location":"leetcode/math/add_two_numbers/#concept","text":"Algorithm: Create a dummy node and a pointer curr which point to the dummy node. Create a variable carry as a flag to know if there's a carry bit been set. Visit l1 & l2 iterately, sum up l1 or l2 if it's not null. We need to add carry if it present' Update the carry flag by set carry=sum/10 every time. Create a new node with value tmp%10 and let curr point to that address. Move pointer curr to the next by curr = curr->next Repeart until l1 & l2 are visited both. Remember to create a new node if the carry flag is set.","title":"Concept:"},{"location":"leetcode/math/add_two_numbers/#complexity","text":"Time Complexity O(n): Where n is max(l1.length, l2.length). Space Complexity O(n): Where n is max(l1.length, l2.length).","title":"Complexity"},{"location":"leetcode/math/add_two_numbers/#code","text":"/** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * addTwoNumbers ( ListNode * l1 , ListNode * l2 ) { ListNode * p = l1 , * q = l2 , * dummy , * curr ; int carry = 0 ; dummy = new ListNode (); curr = dummy ; // a pointer to the dummy node while ( p || q ) { int tmp = 0 + carry ; if ( p ) tmp += p -> val ; if ( q ) tmp += q -> val ; carry = tmp / 10 ; curr -> next = new ListNode ( tmp % 10 ); // make link to the dummy curr = curr -> next ; // move curr pointer to next one if ( p ) p = p -> next ; if ( q ) q = q -> next ; } if ( carry ) // ethier 0 or 1 curr -> next = new ListNode ( carry ); return dummy -> next ; } };","title":"Code:"},{"location":"leetcode/math/nim_game/","text":"292. Nim Game Source You are playing the following Nim Game with your friend: Initially, there is a heap of stones on the table. You and your friend will alternate taking turns, and you go first. On each turn, the person whose turn it is will remove 1 to 3 stones from the heap. The one who removes the last stone is the winner. Given n, the number of stones in the heap, return true if you can win the game assuming both you and your friend play optimally, otherwise return false. Constraints 1 <= n <= 231 - 1 Concept Because you could take either 1 or 2 or 3 stones each time, so you win the game when the total number of stones less than 4. Why does this matter? Consider the case that there are 5-7 stones on the table, and we could pick 1 / 2 / 3 respectively to let the number of the rest stones to 4, but you could NOT win when the number is 4 or 8, so we could assume that the number is not divisible by 4 is the answer. Complexity Time Complexity O(1) Space Complexity O(1) Code class Solution { public : bool canWinNim ( int n ) { return n & 3 ; // or return n%4 != 0; } };","title":"292. Nim Game"},{"location":"leetcode/math/nim_game/#292-nim-game","text":"Source You are playing the following Nim Game with your friend: Initially, there is a heap of stones on the table. You and your friend will alternate taking turns, and you go first. On each turn, the person whose turn it is will remove 1 to 3 stones from the heap. The one who removes the last stone is the winner. Given n, the number of stones in the heap, return true if you can win the game assuming both you and your friend play optimally, otherwise return false. Constraints 1 <= n <= 231 - 1","title":"292. Nim Game"},{"location":"leetcode/math/nim_game/#concept","text":"Because you could take either 1 or 2 or 3 stones each time, so you win the game when the total number of stones less than 4. Why does this matter? Consider the case that there are 5-7 stones on the table, and we could pick 1 / 2 / 3 respectively to let the number of the rest stones to 4, but you could NOT win when the number is 4 or 8, so we could assume that the number is not divisible by 4 is the answer.","title":"Concept"},{"location":"leetcode/math/nim_game/#complexity","text":"Time Complexity O(1) Space Complexity O(1)","title":"Complexity"},{"location":"leetcode/math/nim_game/#code","text":"class Solution { public : bool canWinNim ( int n ) { return n & 3 ; // or return n%4 != 0; } };","title":"Code"},{"location":"leetcode/math/reverse_integer/","text":"7. Reverse Integer Source Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0. Assume the environment does not allow you to store 64-bit integers (signed or unsigned). Constraints -231 <= x <= 231 - 1 Concept The limitation that you could NOT use a long or long long to store a temporary data, so we might consider the edge case that could prevent overflow or underflow during checking each digit, the algorithm will be: Detect the input value is negative or not and use a flag to hold it. Set the absolute value of x to y to make the codes easy to implement. Check the y>0 iterately and get remaining r . Calculate the temporary answer by v = v*10 +r , but the key point is: if v > INT_MAX/10 , return 0 if v == INT_MAX/10 && r > 7 , return 0 Return the correct answer with previous sign flag. Why we need to return 0 in some condition? It's because any number larger than INT_MAX/10 cannot be multipied by 10 or it would get overflow exception. Complexity Time Complexity O(log(n)): It's roughly equal log 10 (n). Space Complexity O(1) Code class Solution { public : int reverse ( int x ) { int v = 0 ; int sign = x >= 0 ; int y = abs ( x ); while ( y > 0 ) { int r = y % 10 ; if ( v > INT_MAX / 10 ) // v >= 214748365 return 0 ; if ( v == INT_MAX / 10 && r > 7 ) // v >= 214748364 && r > 7 return 0 ; v = v * 10 + r ; y /= 10 ; } return sign ? v : 0 - v ; } };","title":"7. Reverse Integer"},{"location":"leetcode/math/reverse_integer/#7-reverse-integer","text":"Source Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0. Assume the environment does not allow you to store 64-bit integers (signed or unsigned). Constraints -231 <= x <= 231 - 1","title":"7. Reverse Integer"},{"location":"leetcode/math/reverse_integer/#concept","text":"The limitation that you could NOT use a long or long long to store a temporary data, so we might consider the edge case that could prevent overflow or underflow during checking each digit, the algorithm will be: Detect the input value is negative or not and use a flag to hold it. Set the absolute value of x to y to make the codes easy to implement. Check the y>0 iterately and get remaining r . Calculate the temporary answer by v = v*10 +r , but the key point is: if v > INT_MAX/10 , return 0 if v == INT_MAX/10 && r > 7 , return 0 Return the correct answer with previous sign flag. Why we need to return 0 in some condition? It's because any number larger than INT_MAX/10 cannot be multipied by 10 or it would get overflow exception.","title":"Concept"},{"location":"leetcode/math/reverse_integer/#complexity","text":"Time Complexity O(log(n)): It's roughly equal log 10 (n). Space Complexity O(1)","title":"Complexity"},{"location":"leetcode/math/reverse_integer/#code","text":"class Solution { public : int reverse ( int x ) { int v = 0 ; int sign = x >= 0 ; int y = abs ( x ); while ( y > 0 ) { int r = y % 10 ; if ( v > INT_MAX / 10 ) // v >= 214748365 return 0 ; if ( v == INT_MAX / 10 && r > 7 ) // v >= 214748364 && r > 7 return 0 ; v = v * 10 + r ; y /= 10 ; } return sign ? v : 0 - v ; } };","title":"Code"},{"location":"leetcode/math/third_maximum_number/","text":"414. Third Maximum Number Source Given an integer array nums, return the third distinct maximum number in this array. If the third maximum does not exist, return the maximum number. Follow up: Can you find an O(n) solution? Constraints 1 <= nums.length <= 104 -231 <= nums[i] <= 231 - 1 Concept The idea is to find out the top three numbers in one pass algorithm, but we need to take care of the 3rd largest number might INT_MIN . So we use long long as the data type of a vector, and intialize its data to LLONG_MIN . Create a vector vector<long long> vx(3, LLONG_MIN) Iterately compare the number between nums and vx We need to keep the order inside vx if we find a number is larger than any digit in vx Since we initialized data to LLONG_MIN previosuly, so we can return vx[0] (max) if vx[2] is LLONG_MIN which means there's no 3rd biggest number exist. Complexity Time Complexity O(n) Space Complexity O(1) Code class Solution { public : int thirdMax ( vector < int >& nums ) { vector < long long > vx ( 3 , LLONG_MIN ); for ( int i = 0 ; i < nums . size (); i ++ ) { if ( find ( vx . begin (), vx . end (), nums [ i ]) != vx . end ()) continue ; if ( nums [ i ] > vx [ 0 ]) vx = { nums [ i ], vx [ 0 ], vx [ 1 ]}; else if ( nums [ i ] > vx [ 1 ]) vx = { vx [ 0 ], nums [ i ], vx [ 1 ]}; else if ( nums [ i ] > vx [ 2 ]) vx = { vx [ 0 ], vx [ 1 ], nums [ i ]}; } return vx [ 2 ] == LLONG_MIN ? vx [ 0 ] : vx [ 2 ]; } };","title":"414. Third Maximum Number"},{"location":"leetcode/math/third_maximum_number/#414-third-maximum-number","text":"Source Given an integer array nums, return the third distinct maximum number in this array. If the third maximum does not exist, return the maximum number. Follow up: Can you find an O(n) solution? Constraints 1 <= nums.length <= 104 -231 <= nums[i] <= 231 - 1","title":"414. Third Maximum Number"},{"location":"leetcode/math/third_maximum_number/#concept","text":"The idea is to find out the top three numbers in one pass algorithm, but we need to take care of the 3rd largest number might INT_MIN . So we use long long as the data type of a vector, and intialize its data to LLONG_MIN . Create a vector vector<long long> vx(3, LLONG_MIN) Iterately compare the number between nums and vx We need to keep the order inside vx if we find a number is larger than any digit in vx Since we initialized data to LLONG_MIN previosuly, so we can return vx[0] (max) if vx[2] is LLONG_MIN which means there's no 3rd biggest number exist.","title":"Concept"},{"location":"leetcode/math/third_maximum_number/#complexity","text":"Time Complexity O(n) Space Complexity O(1)","title":"Complexity"},{"location":"leetcode/math/third_maximum_number/#code","text":"class Solution { public : int thirdMax ( vector < int >& nums ) { vector < long long > vx ( 3 , LLONG_MIN ); for ( int i = 0 ; i < nums . size (); i ++ ) { if ( find ( vx . begin (), vx . end (), nums [ i ]) != vx . end ()) continue ; if ( nums [ i ] > vx [ 0 ]) vx = { nums [ i ], vx [ 0 ], vx [ 1 ]}; else if ( nums [ i ] > vx [ 1 ]) vx = { vx [ 0 ], nums [ i ], vx [ 1 ]}; else if ( nums [ i ] > vx [ 2 ]) vx = { vx [ 0 ], vx [ 1 ], nums [ i ]}; } return vx [ 2 ] == LLONG_MIN ? vx [ 0 ] : vx [ 2 ]; } };","title":"Code"},{"location":"leetcode/math/two_sum/","text":"1. Two Sum Source Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order. Follow-up: Can you come up with an algorithm that is less than O(n2) time complexity? Constraints 2 <= nums.length <= 104 -109 <= nums[i] <= 109 -109 <= target <= 109 Only one valid answer exists. Concept Because the limitation is to implement a algorithm which time complexity is less O(n^2), so we use an extra space to keep track of indice in a map. Then we iterately check if the complement exists in the map. Complexity Time Complexity O(n): We only visit each element one time in the worst case. Space Complexity O(n): We use an extra space to map the complement and index. Code class Solution { public : vector < int > twoSum ( vector < int >& nums , int target ) { map < int , int > m ; for ( int i = 0 ; i < nums . size (); i ++ ) { int diff = target - nums [ i ]; if ( m . count ( diff ) > 0 ) return { m [ diff ], i }; m [ nums [ i ]] = i ; } return {}; } };","title":"1. Two Sum"},{"location":"leetcode/math/two_sum/#1-two-sum","text":"Source Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order. Follow-up: Can you come up with an algorithm that is less than O(n2) time complexity? Constraints 2 <= nums.length <= 104 -109 <= nums[i] <= 109 -109 <= target <= 109 Only one valid answer exists.","title":"1. Two Sum"},{"location":"leetcode/math/two_sum/#concept","text":"Because the limitation is to implement a algorithm which time complexity is less O(n^2), so we use an extra space to keep track of indice in a map. Then we iterately check if the complement exists in the map.","title":"Concept"},{"location":"leetcode/math/two_sum/#complexity","text":"Time Complexity O(n): We only visit each element one time in the worst case. Space Complexity O(n): We use an extra space to map the complement and index.","title":"Complexity"},{"location":"leetcode/math/two_sum/#code","text":"class Solution { public : vector < int > twoSum ( vector < int >& nums , int target ) { map < int , int > m ; for ( int i = 0 ; i < nums . size (); i ++ ) { int diff = target - nums [ i ]; if ( m . count ( diff ) > 0 ) return { m [ diff ], i }; m [ nums [ i ]] = i ; } return {}; } };","title":"Code"},{"location":"leetcode/sliding_window/longest_repeating_character_replacement/","text":"424. Longest Repeating Character Replacement Source Topic : Sliding Window, Hash Table, String You are given a string s and an integer k. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most k times. Return the length of the longest substring containing the same letter you can get after performing the above operations. Constraints 1 <= s.length <= 105 s consists of only uppercase English letters. 0 <= k <= s.length Concept Sliding Window We use l & r as the bound of a window, the main idea is to check if Window_Size - the number of majority <= k , why? Since there's only k chances that we can replace characters, so a valid window will have the number which less than k for replacement. How do we find the maxmimum lenght of a repeating string? Use a variable res to keep track of the max value and update the result only when a valid window size is more than res . Complexity Time Complexity O(n): n is equal to string length. Space Complexity O(1): the worst case will be n=26 becasue there're 26 distinct characters in the string. Special test case Code class Solution { public : static bool compare ( const pair < char , int >& a , const pair < char , int >& b ){ return a . second <= b . second ; } int characterReplacement ( string s , int k ) { int l = 0 , r = 0 , res = 0 ; map < char , int > m ; // key: character, value: frequency int maxf = 0 ; for ( auto c : s ) { int winLen = r - l + 1 ; m [ c ] ++ ; maxf = max ( maxf , m [ c ]); // while (winLen - max_element(m.begin(), m.end(), compare)->second > k) { while ( winLen - maxf > k ) { // Use maxf instead of searching from map m [ s [ l ]] -- ; l ++ ; winLen = r - l + 1 ; } res = max ( res , winLen ); r ++ ; } return res ; } };","title":"424. Longest Repeating Character Replacement"},{"location":"leetcode/sliding_window/longest_repeating_character_replacement/#424-longest-repeating-character-replacement","text":"Source Topic : Sliding Window, Hash Table, String You are given a string s and an integer k. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most k times. Return the length of the longest substring containing the same letter you can get after performing the above operations. Constraints 1 <= s.length <= 105 s consists of only uppercase English letters. 0 <= k <= s.length","title":"424. Longest Repeating Character Replacement"},{"location":"leetcode/sliding_window/longest_repeating_character_replacement/#concept","text":"Sliding Window We use l & r as the bound of a window, the main idea is to check if Window_Size - the number of majority <= k , why? Since there's only k chances that we can replace characters, so a valid window will have the number which less than k for replacement. How do we find the maxmimum lenght of a repeating string? Use a variable res to keep track of the max value and update the result only when a valid window size is more than res .","title":"Concept"},{"location":"leetcode/sliding_window/longest_repeating_character_replacement/#complexity","text":"Time Complexity O(n): n is equal to string length. Space Complexity O(1): the worst case will be n=26 becasue there're 26 distinct characters in the string.","title":"Complexity"},{"location":"leetcode/sliding_window/longest_repeating_character_replacement/#special-test-case","text":"","title":"Special test case"},{"location":"leetcode/sliding_window/longest_repeating_character_replacement/#code","text":"class Solution { public : static bool compare ( const pair < char , int >& a , const pair < char , int >& b ){ return a . second <= b . second ; } int characterReplacement ( string s , int k ) { int l = 0 , r = 0 , res = 0 ; map < char , int > m ; // key: character, value: frequency int maxf = 0 ; for ( auto c : s ) { int winLen = r - l + 1 ; m [ c ] ++ ; maxf = max ( maxf , m [ c ]); // while (winLen - max_element(m.begin(), m.end(), compare)->second > k) { while ( winLen - maxf > k ) { // Use maxf instead of searching from map m [ s [ l ]] -- ; l ++ ; winLen = r - l + 1 ; } res = max ( res , winLen ); r ++ ; } return res ; } };","title":"Code"},{"location":"leetcode/sorting/contains_duplicate/","text":"217. Contains Duplicate Source Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct. Constraints 1 <= nums.length <= 105 -109 <= nums[i] <= 109 Concept There're serveral method could be used to solve this problem - Sorting , map , set . Sorting If we find out a number is equal to its adjacent element, return true immediately. map Using number as key of map and the occurence as the value, if there's one occurence more than one, we'll return true. set Using set as container and copy all nodes to that. Comparing the size between these two containers, return true if they're different. Complexity Time Complexity Sorting: O(nlogn) Map: O(n) Set: (n) Space Complexity Sorting: O(logn), the space needed when sorting elements. Map: O(n), we'd use as many as the input number when they're all different. Set: (n), same as map. Code Sort bool containsDuplicate ( vector < int >& nums ) { sort ( nums . begin (), nums . end ()); int len = nums . size (); for ( int i = 1 ; i < len ; i ++ ) { if ( nums [ i -1 ] == nums [ i ]) return true ; } return false ; } Set bool containsDuplicate ( vector < int >& nums ) { set < int > st ( nums . begin (), nums . end ()); return nums . size () > st . size (); } Map bool containsDuplicate ( vector < int >& nums ) { map < int , int > mp ; for ( auto n : nums ) { mp [ n ] ++ ; } for ( auto m : mp ) if ( m . second > 1 ) return true ; return false ; }","title":"217. Contains Duplicate"},{"location":"leetcode/sorting/contains_duplicate/#217-contains-duplicate","text":"Source Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct. Constraints 1 <= nums.length <= 105 -109 <= nums[i] <= 109","title":"217. Contains Duplicate"},{"location":"leetcode/sorting/contains_duplicate/#concept","text":"There're serveral method could be used to solve this problem - Sorting , map , set . Sorting If we find out a number is equal to its adjacent element, return true immediately. map Using number as key of map and the occurence as the value, if there's one occurence more than one, we'll return true. set Using set as container and copy all nodes to that. Comparing the size between these two containers, return true if they're different.","title":"Concept"},{"location":"leetcode/sorting/contains_duplicate/#complexity","text":"Time Complexity Sorting: O(nlogn) Map: O(n) Set: (n) Space Complexity Sorting: O(logn), the space needed when sorting elements. Map: O(n), we'd use as many as the input number when they're all different. Set: (n), same as map.","title":"Complexity"},{"location":"leetcode/sorting/contains_duplicate/#code","text":"Sort bool containsDuplicate ( vector < int >& nums ) { sort ( nums . begin (), nums . end ()); int len = nums . size (); for ( int i = 1 ; i < len ; i ++ ) { if ( nums [ i -1 ] == nums [ i ]) return true ; } return false ; } Set bool containsDuplicate ( vector < int >& nums ) { set < int > st ( nums . begin (), nums . end ()); return nums . size () > st . size (); } Map bool containsDuplicate ( vector < int >& nums ) { map < int , int > mp ; for ( auto n : nums ) { mp [ n ] ++ ; } for ( auto m : mp ) if ( m . second > 1 ) return true ; return false ; }","title":"Code"},{"location":"leetcode/sorting/largest_number/","text":"179. Largest Number Source Given a list of non-negative integers nums, arrange them such that they form the largest number and return it. Since the result may be very large, so you need to return a string instead of an integer. Constraints 1 <= nums.length <= 100 0 <= nums[i] <= 109 Concept We need to customize a sorting comparator in our way. Before to sort the array, we have to convert the data type from integer to string to prevent from overflow during sorting. Consider a case of [21474836, 7] , we would get an overflow exception while compose 7 + 21474836 because it's bigger than INT_MAX. The rule of comparator is s1+s2 > s2+s1 where s1 and s2 is the string in the array. After sorting is complete, we should check the resultant string by removing the leading zero because the edge case [0,0,0] could come out with 000 . Complexity Time Complexity O(nlogn): The sorting algorithm. Space Complexity O(n): Need an extra space to store the result. Special test case [0,0,0,0,0,0,0] [1,2,3,4,5,6,7,8,9,0] Code class Solution { public : string largestNumber ( vector < int >& nums ) { vector < string > strs ; std :: transform ( nums . begin (), nums . end (), std :: back_inserter ( strs ), []( int n ) { return std :: to_string ( n ); }); sort ( strs . begin (), strs . end (), []( string & s1 , string & s2 ){ return s1 + s2 > s2 + s1 ; }); stringstream ss ; for ( auto s : strs ) { ss << s ; } string ans = ss . str (); while ( ans [ 0 ] == '0' && ans . length () > 1 ) ans . erase ( 0 , 1 ); return ans ; } };","title":"179. Largest Number"},{"location":"leetcode/sorting/largest_number/#179-largest-number","text":"Source Given a list of non-negative integers nums, arrange them such that they form the largest number and return it. Since the result may be very large, so you need to return a string instead of an integer. Constraints 1 <= nums.length <= 100 0 <= nums[i] <= 109","title":"179. Largest Number"},{"location":"leetcode/sorting/largest_number/#concept","text":"We need to customize a sorting comparator in our way. Before to sort the array, we have to convert the data type from integer to string to prevent from overflow during sorting. Consider a case of [21474836, 7] , we would get an overflow exception while compose 7 + 21474836 because it's bigger than INT_MAX. The rule of comparator is s1+s2 > s2+s1 where s1 and s2 is the string in the array. After sorting is complete, we should check the resultant string by removing the leading zero because the edge case [0,0,0] could come out with 000 .","title":"Concept"},{"location":"leetcode/sorting/largest_number/#complexity","text":"Time Complexity O(nlogn): The sorting algorithm. Space Complexity O(n): Need an extra space to store the result.","title":"Complexity"},{"location":"leetcode/sorting/largest_number/#special-test-case","text":"[0,0,0,0,0,0,0] [1,2,3,4,5,6,7,8,9,0]","title":"Special test case"},{"location":"leetcode/sorting/largest_number/#code","text":"class Solution { public : string largestNumber ( vector < int >& nums ) { vector < string > strs ; std :: transform ( nums . begin (), nums . end (), std :: back_inserter ( strs ), []( int n ) { return std :: to_string ( n ); }); sort ( strs . begin (), strs . end (), []( string & s1 , string & s2 ){ return s1 + s2 > s2 + s1 ; }); stringstream ss ; for ( auto s : strs ) { ss << s ; } string ans = ss . str (); while ( ans [ 0 ] == '0' && ans . length () > 1 ) ans . erase ( 0 , 1 ); return ans ; } };","title":"Code"},{"location":"leetcode/sorting/merge_intervals/","text":"56. Merge Intervals Source Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input. Constraints 1 <= intervals.length <= 104 intervals[i].length == 2 0 <= starti <= endi <= 104 Concept If the source array has been sorted, then we could compare the second value of last item in the output list in one pass. So what is overlap in this problem? We could define the overlap as intervals[i-1][1] < intervals[i][0] . Since the intervals is sorted previously which means we could put the first item to output array and compare next item with output array one by one. Complexity Time Complexity O(nlogn): Assuming the sorting algorithm is O(nlogn). Then the following one pass check( linear scan ) has complexity O(n) Space Complexity O(logn): The sorting algorithm might need an extra space. Special test case [[1,4],[0,0]] [[2,3],[4,5],[6,7],[8,9],[1,10]] Code class Solution { public : vector < vector < int >> merge ( vector < vector < int >>& intervals ) { vector < vector < int >> merged ; sort ( intervals . begin (), intervals . end ()); // Sort by the first element, so we can easily compare the second in one pass for ( auto val : intervals ) { if ( merged . empty () || merged . back ()[ 1 ] < val [ 0 ]) // Append to list if it's not overlapped. merged . push_back ( val ); else merged . back ()[ 1 ] = max ( merged . back ()[ 1 ], val [ 1 ]); // If it's overlap, pick max from the two tails. } return merged ; } };","title":"56. Merge Intervals"},{"location":"leetcode/sorting/merge_intervals/#56-merge-intervals","text":"Source Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input. Constraints 1 <= intervals.length <= 104 intervals[i].length == 2 0 <= starti <= endi <= 104","title":"56. Merge Intervals"},{"location":"leetcode/sorting/merge_intervals/#concept","text":"If the source array has been sorted, then we could compare the second value of last item in the output list in one pass. So what is overlap in this problem? We could define the overlap as intervals[i-1][1] < intervals[i][0] . Since the intervals is sorted previously which means we could put the first item to output array and compare next item with output array one by one.","title":"Concept"},{"location":"leetcode/sorting/merge_intervals/#complexity","text":"Time Complexity O(nlogn): Assuming the sorting algorithm is O(nlogn). Then the following one pass check( linear scan ) has complexity O(n) Space Complexity O(logn): The sorting algorithm might need an extra space.","title":"Complexity"},{"location":"leetcode/sorting/merge_intervals/#special-test-case","text":"[[1,4],[0,0]] [[2,3],[4,5],[6,7],[8,9],[1,10]]","title":"Special test case"},{"location":"leetcode/sorting/merge_intervals/#code","text":"class Solution { public : vector < vector < int >> merge ( vector < vector < int >>& intervals ) { vector < vector < int >> merged ; sort ( intervals . begin (), intervals . end ()); // Sort by the first element, so we can easily compare the second in one pass for ( auto val : intervals ) { if ( merged . empty () || merged . back ()[ 1 ] < val [ 0 ]) // Append to list if it's not overlapped. merged . push_back ( val ); else merged . back ()[ 1 ] = max ( merged . back ()[ 1 ], val [ 1 ]); // If it's overlap, pick max from the two tails. } return merged ; } };","title":"Code"},{"location":"leetcode/string/letter_combinations_of_a_phone_number/","text":"17. Letter Combinations of a Phone Number Source Topic : Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order. A mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters. Constraints 0 <= digits.length <= 4 digits[i] is a digit in the range ['2', '9']. Concept We need a vector to store the letter, and the output array will be initialized to \"\"( vector<string> out(1, \"\") ). The answer comes after the following steps: Iterate the input string digits For every digit which we are visiting, then enumerate letters regarding current digit. Combine the string separately with current letter. Using assign() or swap() to change the content of output buffer. Complexity Time Complexity O(4^n): n is the length of digits Space Complexity Special test case Code class Solution { public : vector < string > letterCombinations ( string digits ) { if ( digits . empty ()) return {}; vector < string > ss = { \"\" , \"\" , \"abc\" , \"def\" , \"ghi\" , \"jkl\" , \"mno\" , \"pqrs\" , \"tuv\" , \"wxyz\" }; vector < string > out ( 1 , \"\" ); // Key point, need to initialze as \"\" for ( auto d : digits ) { vector < string > vx ; for ( auto c : ss [ d - '0' ]) { // Relative offset to '0' for ( auto o : out ) { // Because we've initialized to \"\", so there will \"\" + \"a\"... vx . push_back ( o + c ); } } // out.assign(vx.begin(), vx.end()); out . swap ( vx ); // This should be constant time. } return out ; } };","title":"17. Letter Combinations of a Phone Number"},{"location":"leetcode/string/letter_combinations_of_a_phone_number/#17-letter-combinations-of-a-phone-number","text":"Source Topic : Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order. A mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters. Constraints 0 <= digits.length <= 4 digits[i] is a digit in the range ['2', '9'].","title":"17. Letter Combinations of a Phone Number"},{"location":"leetcode/string/letter_combinations_of_a_phone_number/#concept","text":"We need a vector to store the letter, and the output array will be initialized to \"\"( vector<string> out(1, \"\") ). The answer comes after the following steps: Iterate the input string digits For every digit which we are visiting, then enumerate letters regarding current digit. Combine the string separately with current letter. Using assign() or swap() to change the content of output buffer.","title":"Concept"},{"location":"leetcode/string/letter_combinations_of_a_phone_number/#complexity","text":"Time Complexity O(4^n): n is the length of digits Space Complexity","title":"Complexity"},{"location":"leetcode/string/letter_combinations_of_a_phone_number/#special-test-case","text":"","title":"Special test case"},{"location":"leetcode/string/letter_combinations_of_a_phone_number/#code","text":"class Solution { public : vector < string > letterCombinations ( string digits ) { if ( digits . empty ()) return {}; vector < string > ss = { \"\" , \"\" , \"abc\" , \"def\" , \"ghi\" , \"jkl\" , \"mno\" , \"pqrs\" , \"tuv\" , \"wxyz\" }; vector < string > out ( 1 , \"\" ); // Key point, need to initialze as \"\" for ( auto d : digits ) { vector < string > vx ; for ( auto c : ss [ d - '0' ]) { // Relative offset to '0' for ( auto o : out ) { // Because we've initialized to \"\", so there will \"\" + \"a\"... vx . push_back ( o + c ); } } // out.assign(vx.begin(), vx.end()); out . swap ( vx ); // This should be constant time. } return out ; } };","title":"Code"},{"location":"leetcode/string/zigzag_conversion/","text":"6. Zigzag Conversion Source Topic : The string \"PAYPALISHIRING\" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility) P A H N A P L S I I G Y I R And then read line by line: \"PAHNAPLSIIGYIR\" Write the code that will take a string and make this conversion given a number of rows: string convert(string s, int numRows); Constraints 1 <= s.length <= 1000 s consists of English letters (lower-case and upper-case), ',' and '.'. 1 <= numRows <= 1000 Concept Image we have multiple rows and then we put character one by one to each row, what we do is: Make sure we have enough rows to put character Change the direction if the index reach to the bound Complexity Time Complexity O(n): n == s.length() Space Complexity O(n): n is max(numRows, s.length()) Special test case We add max(numRows, s.length()) when initializing vector to make sure there will have sufficient space. \"AB\" 1 Code class Solution { public : string convert ( string s , int numRows ) { vector < string > vx ( max ( numRows , ( int ) s . length ()), \"\" ); int idx = 0 ; bool godown = true ; for ( char c : s ) { vx [ idx ]. push_back ( c ); idx += godown ? 1 : -1 ; if ( idx == 0 || idx == numRows -1 ) godown = ! godown ; } string ans ; for ( string str : vx ) { ans += str ; } return ans ; } };","title":"6. Zigzag Conversion"},{"location":"leetcode/string/zigzag_conversion/#6-zigzag-conversion","text":"Source Topic : The string \"PAYPALISHIRING\" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility) P A H N A P L S I I G Y I R And then read line by line: \"PAHNAPLSIIGYIR\" Write the code that will take a string and make this conversion given a number of rows: string convert(string s, int numRows); Constraints 1 <= s.length <= 1000 s consists of English letters (lower-case and upper-case), ',' and '.'. 1 <= numRows <= 1000","title":"6. Zigzag Conversion"},{"location":"leetcode/string/zigzag_conversion/#concept","text":"Image we have multiple rows and then we put character one by one to each row, what we do is: Make sure we have enough rows to put character Change the direction if the index reach to the bound","title":"Concept"},{"location":"leetcode/string/zigzag_conversion/#complexity","text":"Time Complexity O(n): n == s.length() Space Complexity O(n): n is max(numRows, s.length())","title":"Complexity"},{"location":"leetcode/string/zigzag_conversion/#special-test-case","text":"We add max(numRows, s.length()) when initializing vector to make sure there will have sufficient space. \"AB\" 1","title":"Special test case"},{"location":"leetcode/string/zigzag_conversion/#code","text":"class Solution { public : string convert ( string s , int numRows ) { vector < string > vx ( max ( numRows , ( int ) s . length ()), \"\" ); int idx = 0 ; bool godown = true ; for ( char c : s ) { vx [ idx ]. push_back ( c ); idx += godown ? 1 : -1 ; if ( idx == 0 || idx == numRows -1 ) godown = ! godown ; } string ans ; for ( string str : vx ) { ans += str ; } return ans ; } };","title":"Code"},{"location":"leetcode/two_pointers/3Sum/","text":"15. 3Sum Source Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0. Notice that the solution set must not contain duplicate triplets. Constraints 0 <= nums.length <= 3000 -105 <= nums[i] <= 105 Concept Two Pointers Before using two poiters strategy, we have to sort the input array first so that it can be easily to compare. The algorithm is: Sort the array Set the target=0-nums[i] because we will check the rest elements to find out if there's a pair which sum equal to target. The key point is to set left pointer l to the next of current digit and set right pointer r to the end of array. If nums[l]+nums[r] < target , we need to move l to the right by 1. If nums[l]+nums[r] > target , we need to move r to the left by 1. If nums[l]+nums[r] == target , it means there's a solution found. Then we iterate moving l or r pointers if its next elements is equal. Complexity Time Complexity O(n^2): The sorting takes O(nlogn), and the worst case of visiting elements will be O(n^2). So O(nlogn + n^2) will be O(n^2) Space Complexity Code class Solution { public : vector < vector < int >> threeSum ( vector < int >& nums ) { sort ( nums . begin (), nums . end ()); vector < vector < int >> vx ; int len = nums . size (); for ( int i = 0 ; i < len -2 ; i ++ ) { if ( i > 0 && nums [ i ] == nums [ i -1 ]) continue ; int l = i + 1 , r = len -1 ; int target = 0 - nums [ i ]; while ( l < r ) { if ( nums [ l ] + nums [ r ] < target ) l ++ ; else if ( nums [ l ] + nums [ r ] > target ) r -- ; else { vx . push_back ({ nums [ i ], nums [ l ], nums [ r ]}); while ( l < r && nums [ l ] == nums [ l + 1 ]) l ++ ; while ( l < r && nums [ r ] == nums [ r -1 ]) r -- ; l ++ ; r -- ; } } } return vx ; } };","title":"15. 3Sum"},{"location":"leetcode/two_pointers/3Sum/#15-3sum","text":"Source Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0. Notice that the solution set must not contain duplicate triplets. Constraints 0 <= nums.length <= 3000 -105 <= nums[i] <= 105","title":"15. 3Sum"},{"location":"leetcode/two_pointers/3Sum/#concept","text":"Two Pointers Before using two poiters strategy, we have to sort the input array first so that it can be easily to compare. The algorithm is: Sort the array Set the target=0-nums[i] because we will check the rest elements to find out if there's a pair which sum equal to target. The key point is to set left pointer l to the next of current digit and set right pointer r to the end of array. If nums[l]+nums[r] < target , we need to move l to the right by 1. If nums[l]+nums[r] > target , we need to move r to the left by 1. If nums[l]+nums[r] == target , it means there's a solution found. Then we iterate moving l or r pointers if its next elements is equal.","title":"Concept"},{"location":"leetcode/two_pointers/3Sum/#complexity","text":"Time Complexity O(n^2): The sorting takes O(nlogn), and the worst case of visiting elements will be O(n^2). So O(nlogn + n^2) will be O(n^2) Space Complexity","title":"Complexity"},{"location":"leetcode/two_pointers/3Sum/#code","text":"class Solution { public : vector < vector < int >> threeSum ( vector < int >& nums ) { sort ( nums . begin (), nums . end ()); vector < vector < int >> vx ; int len = nums . size (); for ( int i = 0 ; i < len -2 ; i ++ ) { if ( i > 0 && nums [ i ] == nums [ i -1 ]) continue ; int l = i + 1 , r = len -1 ; int target = 0 - nums [ i ]; while ( l < r ) { if ( nums [ l ] + nums [ r ] < target ) l ++ ; else if ( nums [ l ] + nums [ r ] > target ) r -- ; else { vx . push_back ({ nums [ i ], nums [ l ], nums [ r ]}); while ( l < r && nums [ l ] == nums [ l + 1 ]) l ++ ; while ( l < r && nums [ r ] == nums [ r -1 ]) r -- ; l ++ ; r -- ; } } } return vx ; } };","title":"Code"},{"location":"leetcode/two_pointers/3Sum_closest/","text":"16. 3Sum Closest Source Given an integer array nums of length n and an integer target, find three integers in nums such that the sum is closest to target. Return the sum of the three integers. You may assume that each input would have exactly one solution. Constraints 3 <= nums.length <= 1000 -1000 <= nums[i] <= 1000 -104 <= target <= 104 Concept This problem is similar to 3 Sum , so we could solve it with Two Pointers strategy, the algorithm will be: Sort the input array so that we will adjust the sum by moving left/right pointers. Initialize variable cloeset as the sum of first 3 values because we know there will be at least 3 elements in the array. Note that we can't set cloeset = INT_MAX because it'd raise overflow exception when the target is negative during the statement abs(closest-target) . Then we iterately compare the sum with target by moving left/right pointers. Re-assign closest to sum when we got a smaller answer exist. Complexity Time Complexity O(nlogn + nlogn) = O(nlogn): Where the outer loop has complexity O(n) and inner loop has complexity (logn). The sorting has complexity O(nlogn) Space Complexity O(1): Constant memory. Code class Solution { public : int threeSumClosest ( vector < int >& nums , int target ) { sort ( nums . begin (), nums . end ()); int closest = nums [ 0 ] + nums [ 1 ] + nums [ 2 ]; // nums.size() >= 3 && cannot be INT_MAX since abs(closest-target) may cause overflow with case [1,1,1,1] -100 int len = nums . size (); for ( int i = 0 ; i < len -2 ; i ++ ) { int l = i + 1 , r = len -1 ; while ( l < r ) { int sum = nums [ i ] + nums [ l ] + nums [ r ]; if ( sum > target ) r -- ; else l ++ ; if ( abs ( sum - target ) < abs ( closest - target )) closest = sum ; } } return closest ; } };","title":"16. 3Sum Closest"},{"location":"leetcode/two_pointers/3Sum_closest/#16-3sum-closest","text":"Source Given an integer array nums of length n and an integer target, find three integers in nums such that the sum is closest to target. Return the sum of the three integers. You may assume that each input would have exactly one solution. Constraints 3 <= nums.length <= 1000 -1000 <= nums[i] <= 1000 -104 <= target <= 104","title":"16. 3Sum Closest"},{"location":"leetcode/two_pointers/3Sum_closest/#concept","text":"This problem is similar to 3 Sum , so we could solve it with Two Pointers strategy, the algorithm will be: Sort the input array so that we will adjust the sum by moving left/right pointers. Initialize variable cloeset as the sum of first 3 values because we know there will be at least 3 elements in the array. Note that we can't set cloeset = INT_MAX because it'd raise overflow exception when the target is negative during the statement abs(closest-target) . Then we iterately compare the sum with target by moving left/right pointers. Re-assign closest to sum when we got a smaller answer exist.","title":"Concept"},{"location":"leetcode/two_pointers/3Sum_closest/#complexity","text":"Time Complexity O(nlogn + nlogn) = O(nlogn): Where the outer loop has complexity O(n) and inner loop has complexity (logn). The sorting has complexity O(nlogn) Space Complexity O(1): Constant memory.","title":"Complexity"},{"location":"leetcode/two_pointers/3Sum_closest/#code","text":"class Solution { public : int threeSumClosest ( vector < int >& nums , int target ) { sort ( nums . begin (), nums . end ()); int closest = nums [ 0 ] + nums [ 1 ] + nums [ 2 ]; // nums.size() >= 3 && cannot be INT_MAX since abs(closest-target) may cause overflow with case [1,1,1,1] -100 int len = nums . size (); for ( int i = 0 ; i < len -2 ; i ++ ) { int l = i + 1 , r = len -1 ; while ( l < r ) { int sum = nums [ i ] + nums [ l ] + nums [ r ]; if ( sum > target ) r -- ; else l ++ ; if ( abs ( sum - target ) < abs ( closest - target )) closest = sum ; } } return closest ; } };","title":"Code"},{"location":"lomorage/basic/","text":"Lomorage is a free and open source solution to build up a personal private cloud to backup your photos, it supports iOS/Android/Web client, and the server can be hosted on Raspberry Pi/Linux/Windows/Mac,etc. Here is the guide to setup Lomorage on Raspberry Pi: Server Setting Download the Lomorage RP prebuilt image from its official site: Lomorage RP Image Flash to micro SD card, Lomorage recommend to use balenaEtcher to write image into SD card. Insert the micro SD card to Raspberry Pi and reboot the device. You need to plugin a HDMI cable to RP to configure the service. Once the boot is completed, you'll see a QR code on the screen, but we now need to press R and then ctrl + alt + F2 to switch to another terminal. 4-1. The default user/password is lomoware/lomorage. Set the wifi SSID with command wifi_switch.sh client \"Lomorage's 2.4G\" mypassword Insert a USB disk as a storage, you need to let lomod figure out where is the mount point, if the USB disk is mounted to /media/pi/sd Make sure the USB disk is format to the supported file system: vfat exfat ext2 ext3 ext4 hfsplus ntfs fuseblk 6-1. Run command: echo \"LOMOD_MOUNT_DIR=/media/pi/sd\" | tee -a /opt/lomorage/etc/environment 6-2. Modify the ExecStart in file /lib/systemd/system/lomod.service to specify the mount-dir ExecStart=/opt/lomorage/bin/lomod -b /opt/lomorage/var --mount-dir /media/pi --max-upload 1 --max-fetch-preview 3 Restart service by # restart lomo-backend sudo systemctl restart lomod # restart lomo-web sudo systemctl restart lomow # restart lomo-frame sudo service supervisor restart Client Setting Download the client from App Store or Google Play on your phone. Make sure your phone and Raspberry Pi are in the same network, and open the Lomorage App and scan the QR code created by Lomorage Server, you can also input IP/Port manually. If the App has connected to server, you'll need to create a user in the next step. Finally, you can select photos to update one by one or drag down to upload all photos.","title":"Lomorage"},{"location":"python/cefpython_upgrade_cef/","text":"\u66f4\u65b0CefPython Chromium \u7248\u672c\u7b46\u8a18 \u66f4\u65b0\u65e5\u671f\uff1a 2022/4/28 \u72c0\u614b\uff1a\u5617\u8a66\u4e2d \u8fd1\u65e5\u50b3\u51faChrome\u700f\u89bd\u5668\u51fa\u73fe\u6f0f\u6d1e( CVE-2022-1364 )\uff0c\u5141\u8a31\u653b\u64ca\u8005\u9060\u7aef\u57f7\u884c\u4efb\u610f\u7a0b\u5f0f\u78bc\uff0c\u5b98\u65b9\u7684\u5efa\u8b70\u662f\u66f4\u65b0\u81f3100.0.4896.127\u4ee5\u5f8c\u7684\u7248\u672c\u3002\u4e0d\u904e\u57fa\u65bcCefPython\u958b\u767c\u7684\u5c08\u6848\u5c31\u6c92\u6709\u90a3\u9ebc\u5e78\u904b\u4e86\uff0c\u56e0\u70ba\u76ee\u524d\u6700\u65b0CefPython\u7684\u7248\u672c\u4ecd\u505c\u7559\u572866\uff0c\u770b\u4f86\u53ea\u80fd\u624b\u52d5\u66f4\u65b0CEF\u7248\u672c\u4e86\u3002 \u96d6\u7136\u4f5c\u8005\u6709\u63d0\u4f9b\u66f4\u65b0CEF\u7248\u672c\u7684 Workflow , \u4f46\u662f\u53ef\u80fd\u7248\u672c\u5dee\u7570\u904e\u5927\uff0c\u904e\u7a0b\u4e2d\u9047\u5230\u5f88\u591a\u932f\u8aa4\u9700\u8981\u81ea\u884c\u8655\u7406\u3002 \u5feb\u901f\u700f\u89bd\u66f4\u65b0\u6b65\u9a5f \u4e0b\u8f09 CefPython \u539f\u59cb\u78bc \u4e0b\u8f09 Prebuilt \u4e0d\u7136\u5f9eCEF\u539f\u59cb\u78bc\u7de8\u8b6f\u6703\u592a\u4e45 \u89e3\u958b\u4e0b\u8f09\u7684prebuilt\u58d3\u7e2e\u6a94\uff0c\u4e26\u4e14\u653e\u5728 \u8def\u5f91\u8f03\u77ed\u7684\u76ee\u9304 \uff0c\u539f\u56e0\u5728\u65bc\u7de8\u8b6f\u904e\u7a0b\u4e2d\u53ef\u80fd\u6703\u51fa\u73fe\u8def\u5f91\u904e\u7a0b\u7684\u932f\u8aa4: VS 2022 Cannot open compiler generated file: '': Invalid argument mkdir build && cd build \u5efa\u7acbbuild\u8cc7\u6599\u593e\u4e26\u79fb\u81f3\u8a72\u8cc7\u6599\u593e pip install -r tools\\requirements.txt \u4fee\u6539 src\\cef_version_win.h \u6b64\u6b65\u9a5f\u8981\u8a2d\u5b9a\u6b63\u78ba\u7248\u865f\u624d\u80fd\u6b63\u78ba\u5f80\u4e0b\u57f7\u884c \u4fee\u6539 tools\\common.py \u4e3b\u8981\u539f\u56e0\u662f\u6211\u4f7f\u7528Python 3.10 \u4fee\u6539\u7de8\u8b6f\u8a2d\u5b9a tools\\common.py & tools\\automate.py \uff0c\u589e\u52a0VS2022\u8def\u5f91 \u70ba\u4e86\u907f\u514d code page (950) \u932f\u8aa4\uff0c\u958b\u555f C:\\CefBin\\cef_binary_101.0.15+gca159c5+chromium-101.0.4951.54_windows64\\tests\\ceftests\\os_rendering_unittest.cc \u4e26\u52a0\u4e0a\u4e0b\u5217\u5169\u884c\uff0c\u6b64\u6a94\u6848\u5fc5\u9808\u53e6\u5b58\u70baUTF-8 with BOM pragma warning(disable : 4819) pragma warning(disable : 4566) python ..\\tools\\automate.py --prebuilt-cef --build-dir C:\\CefBin\\ \u4e0a\u8ff0\u6307\u4ee4\u5b8c\u6210\u6703\u5728 C:\\CefBin \u4e0b\u7522\u751f\u4e00\u500b\u65b0\u7684\u8cc7\u6599\u593e\uff0c\u8907\u88fd\u5230 CefPython\\build \u57f7\u884c python ..\\tool\\build.py xx.x CefPython \u7de8\u8b6f\u904b\u4f5c\u6a5f\u5236(Prebuilt) \u57f7\u884c build.py \u5f8c\uff0c\u5176\u5167\u90e8\u6703\u547c\u53eb cython_setup.py \u53bb\u7522\u751f\u9700\u8981\u7684\u6a19\u982d\u6a94\uff0c\u7b2c\u4e8c\u6b21\u547c\u53eb\u5247\u8173\u672c\u6703\u6aa2\u67e5 build\\build_cefpython \u76ee\u9304\u4e0b\u662f\u5426\u9084\u6709\u672a\u8655\u7406\u7684*.pyx\u6a94\u6848\uff0c\u6c92\u6709\u5247\u4ee3\u8868\u5df2\u7d93\u7522\u751f cefpython_py39_fixed.h cython_setup.py \u6703\u5206\u6790\u539f\u59cb\u78bc\u7522\u751f handler \u76f8\u95dc\u7684\u539f\u59cb\u78bc\u8207\u6a19\u982d\u3002 Trobleshooting \u627e\u4e0d\u5230Python.h \u7db2\u8def\u4e0a\u53ef\u4ee5\u627e\u5230Linux\u7684\u89e3\u6c7a\u65b9\u6cd5\uff0c\u5c31\u662f\u900f\u904e sudo apt install python-dev \uff0c\u4f46\u662f\u6211\u4e00\u958b\u59cb\u662f\u7528Microsoft Store\u7684\u65b9\u5f0f\u5b89\u88ddPython, \u5c31\u6c92\u6709\u770b\u5230\u5fae\u8edf\u6709\u628a\u76f8\u95dc\u7684\u6a19\u982d\u6a94\u653e\u9032\u53bb\uff0c\u6240\u4ee5\u6700\u7c21\u55ae\u7684\u505a\u6cd5\u5c31\u662f\u53bb\u5b98\u65b9\u7db2\u7ad9\u4e0b\u8f09Python\u5b89\u88dd\uff0c\u4e26\u4e14\u4fee\u6539\u4ee5\u4e0bInclude Path\uff0c\u82e5\u4f60\u7684\u5b89\u88dd\u4f4d\u7f6e\u5728 C:\\Python\\Python39\\include \uff0c\u5247\uff1a def get_python_include_path (): base_dir = os . path . dirname ( sys . executable ) try_dirs = [ \" {base_dir} /include\" , \" {base_dir} /../include/python {ver} \" , \" {base_dir} /../include/python {ver} *\" , ( \" {base_dir} /../Frameworks/Python.framework/Versions/ {ver} \" \"/include/python {ver} *\" ), \"/usr/include/python {ver} \" , \"C: \\\\ Python \\\\ Python39 \\\\ include\" ] \u4fee\u6539\u7de8\u8b6f\u8a2d\u5b9a \u4ee5\u6211\u4f7f\u7528\u7684VS2022\u70ba\u4f8b\uff0c\u7531\u65bc\u76ee\u524dCefPython\u53ea\u6709\u652f\u63f4VS2015\u4ee5\u524d\u7684\uff0c\u6240\u4ee5\u5fc5\u9808\u624b\u52d5\u4fee\u6539 tool\\common.py , \u65bc\u7d04Line 223\u884c\u63d2\u5165\uff1a VS2022_VCVARS = ( \"C: \\\\ Program Files \\\\ Microsoft Visual Studio \\\\ 2022 \\\\ Preview \\\\ VC \\\\ Auxiliary \\\\ Build \\\\ vcvarsall.bat\" ) \u4f46\u9019\u500b\u505a\u7684\u524d\u63d0\u5fc5\u9808\u662f\u5df2\u7d93\u88dd\u904eVC++\u4e86\uff0c\u6c92\u6709\u7684\u8a71\u53ef\u4ee5\u7528 Visual Studio Installer \u5b89\u88dd Desktop development with C++ . \u5982\u679c\u662f\u624b\u52d5\u7de8\u8b6fCEF\u7684\u8a71\uff0c\u5247\u9700\u8981\u4e00\u4f75\u4fee\u6539 automate.py , \u5728 prepare_build_command() \u4e2d\u8abf\u6574branch\u865f\u78bc\uff0c\u56e0\u70ba\u6b64\u4fee\u6b63\u57284896\u4e4b\u5f8c\uff0c\u56e0\u6b64\u4fee\u6539\u5982\u4e0b\uff1a def prepare_build_command ( build_lib = False , vcvars = None ): \"\"\"On Windows VS env variables must be set up by calling vcvarsall.bat\"\"\" command = list () if platform . system () == \"Windows\" : if build_lib : ... else : if int ( Options . cef_branch ) >= 4896 : command . append ( VS2022_VCVARS ) # if int(Options.cef_branch) >= 2704: # command.append(VS2015_VCVARS) else : command . append ( VS2013_VCVARS ) command . append ( VS_PLATFORM_ARG ) command . append ( \"&&\" ) return command \u4fee\u6539\u7248\u672c\u865f\u78bc \u4e0b\u8f09\u4e0b\u4f86\u7684prebuilt\u6a94\u6848\u547d\u540d\u5982 cef_binary_100.0.24+g0783cf8+chromium-100.0.4896.127_windows64 \uff0c\u5247\u53ef\u4ee5\u6839\u64da\u7248\u865f\u898f\u5247\u4fee\u6539 cef_version_win.h \u4e2d\u7684Marco\u5b9a\u7fa9\u5982\u4e0b\uff1a #define CEF_VERSION \"100.0.24+g0783cf8+chromium-100.0.4896.127\" #define CHROME_VERSION_MAJOR 100 #define CHROME_VERSION_MINOR 0 #define CHROME_VERSION_BUILD 4896 \u81f3\u65bc\u70ba\u4ec0\u9ebc\u8981\u4fee\u6539\u4e0a\u8ff0\u5b9a\u7fa9\uff0c\u56e0\u70ba\u5728\u7de8\u8b6f\u904e\u7a0bPython\u8173\u672c\u6703\u6839\u64da\u7248\u865f\u5b9a\u7fa9\u53bb\u5c0b\u627eprebuilt\u76ee\u9304\uff0c\u4e0d\u6539\u6703\u627e\u4e0d\u5230\u6a94\u6848\u3002 \u5176\u4ed6\u7de8\u8b6f\u5931\u6557\u554f\u984c \u57f7\u884c build.py xx.x \u6703\u9047\u5230\u5e7e\u500bC++\u7684\u7de8\u8b6f\u932f\u8aa4\uff0c\u6574\u7406\u5728\u4e0b\u65b9\uff1a \u627e\u4e0d\u5230 cefpython_py39_fixed.h: \u4ee5\u6211\u4f7f\u7528\u7684Python\u7248\u672c\u70ba\u4f8b\uff0c\u537b\u4ecd\u56e0\u70baPY_MINOR_VERSION\u627e\u4e0d\u5230\u5b9a\u7fa9\u800c\u7de8\u8b6f\u5931\u6557\u3002\u6700\u7c21\u55ae\u7684\u65b9\u5f0f\u5c31\u662f\u76f4\u63a5\u628a #include \"../../build/build_cefpython/cefpython_py39_fixed.h\" \u653e\u5728\u6700\u5916\u5c64\uff0c\u4fdd\u8b49\u4e00\u5b9a\u53ef\u4ee5include\u5230\u3002 CefRequestCallback not found: \u5f9eCEF\u7684commit log\u53ef\u4ee5\u770b\u5230\u5df2\u7d93\u88ab CefCallback \u53d6\u4ee3\u4e86 OVERRIDE , scoped_ptr , base::Closure unknown identifier: \u9019\u985e\u554f\u984c\u90fd\u53ef\u4ee5\u7528CEF\u7684codebase\u6bd4\u8f03\uff0c\u62c9\u65b0\u7684\u7a0b\u5f0f\u78bc\u904e\u4f86\uff0c\u4e0d\u904e\u8981\u7528\u6bd4\u7684\uff0c\u4e0d\u80fd\u5168\u84cb\u6389\u3002 \u65b0\u589einclude\u5230 cefpython_app.cpp: #include \"client_handler/request_context_handler.h\" #include \"include/cef_callback.h\"","title":"CefPython, Upgrade CEF version"},{"location":"python/cefpython_upgrade_cef/#cefpython-chromium","text":"\u66f4\u65b0\u65e5\u671f\uff1a 2022/4/28 \u72c0\u614b\uff1a\u5617\u8a66\u4e2d \u8fd1\u65e5\u50b3\u51faChrome\u700f\u89bd\u5668\u51fa\u73fe\u6f0f\u6d1e( CVE-2022-1364 )\uff0c\u5141\u8a31\u653b\u64ca\u8005\u9060\u7aef\u57f7\u884c\u4efb\u610f\u7a0b\u5f0f\u78bc\uff0c\u5b98\u65b9\u7684\u5efa\u8b70\u662f\u66f4\u65b0\u81f3100.0.4896.127\u4ee5\u5f8c\u7684\u7248\u672c\u3002\u4e0d\u904e\u57fa\u65bcCefPython\u958b\u767c\u7684\u5c08\u6848\u5c31\u6c92\u6709\u90a3\u9ebc\u5e78\u904b\u4e86\uff0c\u56e0\u70ba\u76ee\u524d\u6700\u65b0CefPython\u7684\u7248\u672c\u4ecd\u505c\u7559\u572866\uff0c\u770b\u4f86\u53ea\u80fd\u624b\u52d5\u66f4\u65b0CEF\u7248\u672c\u4e86\u3002 \u96d6\u7136\u4f5c\u8005\u6709\u63d0\u4f9b\u66f4\u65b0CEF\u7248\u672c\u7684 Workflow , \u4f46\u662f\u53ef\u80fd\u7248\u672c\u5dee\u7570\u904e\u5927\uff0c\u904e\u7a0b\u4e2d\u9047\u5230\u5f88\u591a\u932f\u8aa4\u9700\u8981\u81ea\u884c\u8655\u7406\u3002","title":"\u66f4\u65b0CefPython Chromium \u7248\u672c\u7b46\u8a18"},{"location":"python/cefpython_upgrade_cef/#_1","text":"\u4e0b\u8f09 CefPython \u539f\u59cb\u78bc \u4e0b\u8f09 Prebuilt \u4e0d\u7136\u5f9eCEF\u539f\u59cb\u78bc\u7de8\u8b6f\u6703\u592a\u4e45 \u89e3\u958b\u4e0b\u8f09\u7684prebuilt\u58d3\u7e2e\u6a94\uff0c\u4e26\u4e14\u653e\u5728 \u8def\u5f91\u8f03\u77ed\u7684\u76ee\u9304 \uff0c\u539f\u56e0\u5728\u65bc\u7de8\u8b6f\u904e\u7a0b\u4e2d\u53ef\u80fd\u6703\u51fa\u73fe\u8def\u5f91\u904e\u7a0b\u7684\u932f\u8aa4: VS 2022 Cannot open compiler generated file: '': Invalid argument mkdir build && cd build \u5efa\u7acbbuild\u8cc7\u6599\u593e\u4e26\u79fb\u81f3\u8a72\u8cc7\u6599\u593e pip install -r tools\\requirements.txt \u4fee\u6539 src\\cef_version_win.h \u6b64\u6b65\u9a5f\u8981\u8a2d\u5b9a\u6b63\u78ba\u7248\u865f\u624d\u80fd\u6b63\u78ba\u5f80\u4e0b\u57f7\u884c \u4fee\u6539 tools\\common.py \u4e3b\u8981\u539f\u56e0\u662f\u6211\u4f7f\u7528Python 3.10 \u4fee\u6539\u7de8\u8b6f\u8a2d\u5b9a tools\\common.py & tools\\automate.py \uff0c\u589e\u52a0VS2022\u8def\u5f91 \u70ba\u4e86\u907f\u514d code page (950) \u932f\u8aa4\uff0c\u958b\u555f C:\\CefBin\\cef_binary_101.0.15+gca159c5+chromium-101.0.4951.54_windows64\\tests\\ceftests\\os_rendering_unittest.cc \u4e26\u52a0\u4e0a\u4e0b\u5217\u5169\u884c\uff0c\u6b64\u6a94\u6848\u5fc5\u9808\u53e6\u5b58\u70baUTF-8 with BOM","title":"\u5feb\u901f\u700f\u89bd\u66f4\u65b0\u6b65\u9a5f"},{"location":"python/cefpython_upgrade_cef/#pragma-warningdisable-4819","text":"","title":"pragma warning(disable : 4819)"},{"location":"python/cefpython_upgrade_cef/#pragma-warningdisable-4566","text":"python ..\\tools\\automate.py --prebuilt-cef --build-dir C:\\CefBin\\ \u4e0a\u8ff0\u6307\u4ee4\u5b8c\u6210\u6703\u5728 C:\\CefBin \u4e0b\u7522\u751f\u4e00\u500b\u65b0\u7684\u8cc7\u6599\u593e\uff0c\u8907\u88fd\u5230 CefPython\\build \u57f7\u884c python ..\\tool\\build.py xx.x","title":"pragma warning(disable : 4566)"},{"location":"python/cefpython_upgrade_cef/#cefpython-prebuilt","text":"\u57f7\u884c build.py \u5f8c\uff0c\u5176\u5167\u90e8\u6703\u547c\u53eb cython_setup.py \u53bb\u7522\u751f\u9700\u8981\u7684\u6a19\u982d\u6a94\uff0c\u7b2c\u4e8c\u6b21\u547c\u53eb\u5247\u8173\u672c\u6703\u6aa2\u67e5 build\\build_cefpython \u76ee\u9304\u4e0b\u662f\u5426\u9084\u6709\u672a\u8655\u7406\u7684*.pyx\u6a94\u6848\uff0c\u6c92\u6709\u5247\u4ee3\u8868\u5df2\u7d93\u7522\u751f cefpython_py39_fixed.h cython_setup.py \u6703\u5206\u6790\u539f\u59cb\u78bc\u7522\u751f handler \u76f8\u95dc\u7684\u539f\u59cb\u78bc\u8207\u6a19\u982d\u3002","title":"CefPython \u7de8\u8b6f\u904b\u4f5c\u6a5f\u5236(Prebuilt)"},{"location":"python/cefpython_upgrade_cef/#trobleshooting","text":"","title":"Trobleshooting"},{"location":"python/cefpython_upgrade_cef/#pythonh","text":"\u7db2\u8def\u4e0a\u53ef\u4ee5\u627e\u5230Linux\u7684\u89e3\u6c7a\u65b9\u6cd5\uff0c\u5c31\u662f\u900f\u904e sudo apt install python-dev \uff0c\u4f46\u662f\u6211\u4e00\u958b\u59cb\u662f\u7528Microsoft Store\u7684\u65b9\u5f0f\u5b89\u88ddPython, \u5c31\u6c92\u6709\u770b\u5230\u5fae\u8edf\u6709\u628a\u76f8\u95dc\u7684\u6a19\u982d\u6a94\u653e\u9032\u53bb\uff0c\u6240\u4ee5\u6700\u7c21\u55ae\u7684\u505a\u6cd5\u5c31\u662f\u53bb\u5b98\u65b9\u7db2\u7ad9\u4e0b\u8f09Python\u5b89\u88dd\uff0c\u4e26\u4e14\u4fee\u6539\u4ee5\u4e0bInclude Path\uff0c\u82e5\u4f60\u7684\u5b89\u88dd\u4f4d\u7f6e\u5728 C:\\Python\\Python39\\include \uff0c\u5247\uff1a def get_python_include_path (): base_dir = os . path . dirname ( sys . executable ) try_dirs = [ \" {base_dir} /include\" , \" {base_dir} /../include/python {ver} \" , \" {base_dir} /../include/python {ver} *\" , ( \" {base_dir} /../Frameworks/Python.framework/Versions/ {ver} \" \"/include/python {ver} *\" ), \"/usr/include/python {ver} \" , \"C: \\\\ Python \\\\ Python39 \\\\ include\" ]","title":"\u627e\u4e0d\u5230Python.h"},{"location":"python/cefpython_upgrade_cef/#_2","text":"\u4ee5\u6211\u4f7f\u7528\u7684VS2022\u70ba\u4f8b\uff0c\u7531\u65bc\u76ee\u524dCefPython\u53ea\u6709\u652f\u63f4VS2015\u4ee5\u524d\u7684\uff0c\u6240\u4ee5\u5fc5\u9808\u624b\u52d5\u4fee\u6539 tool\\common.py , \u65bc\u7d04Line 223\u884c\u63d2\u5165\uff1a VS2022_VCVARS = ( \"C: \\\\ Program Files \\\\ Microsoft Visual Studio \\\\ 2022 \\\\ Preview \\\\ VC \\\\ Auxiliary \\\\ Build \\\\ vcvarsall.bat\" ) \u4f46\u9019\u500b\u505a\u7684\u524d\u63d0\u5fc5\u9808\u662f\u5df2\u7d93\u88dd\u904eVC++\u4e86\uff0c\u6c92\u6709\u7684\u8a71\u53ef\u4ee5\u7528 Visual Studio Installer \u5b89\u88dd Desktop development with C++ . \u5982\u679c\u662f\u624b\u52d5\u7de8\u8b6fCEF\u7684\u8a71\uff0c\u5247\u9700\u8981\u4e00\u4f75\u4fee\u6539 automate.py , \u5728 prepare_build_command() \u4e2d\u8abf\u6574branch\u865f\u78bc\uff0c\u56e0\u70ba\u6b64\u4fee\u6b63\u57284896\u4e4b\u5f8c\uff0c\u56e0\u6b64\u4fee\u6539\u5982\u4e0b\uff1a def prepare_build_command ( build_lib = False , vcvars = None ): \"\"\"On Windows VS env variables must be set up by calling vcvarsall.bat\"\"\" command = list () if platform . system () == \"Windows\" : if build_lib : ... else : if int ( Options . cef_branch ) >= 4896 : command . append ( VS2022_VCVARS ) # if int(Options.cef_branch) >= 2704: # command.append(VS2015_VCVARS) else : command . append ( VS2013_VCVARS ) command . append ( VS_PLATFORM_ARG ) command . append ( \"&&\" ) return command","title":"\u4fee\u6539\u7de8\u8b6f\u8a2d\u5b9a"},{"location":"python/cefpython_upgrade_cef/#_3","text":"\u4e0b\u8f09\u4e0b\u4f86\u7684prebuilt\u6a94\u6848\u547d\u540d\u5982 cef_binary_100.0.24+g0783cf8+chromium-100.0.4896.127_windows64 \uff0c\u5247\u53ef\u4ee5\u6839\u64da\u7248\u865f\u898f\u5247\u4fee\u6539 cef_version_win.h \u4e2d\u7684Marco\u5b9a\u7fa9\u5982\u4e0b\uff1a #define CEF_VERSION \"100.0.24+g0783cf8+chromium-100.0.4896.127\" #define CHROME_VERSION_MAJOR 100 #define CHROME_VERSION_MINOR 0 #define CHROME_VERSION_BUILD 4896 \u81f3\u65bc\u70ba\u4ec0\u9ebc\u8981\u4fee\u6539\u4e0a\u8ff0\u5b9a\u7fa9\uff0c\u56e0\u70ba\u5728\u7de8\u8b6f\u904e\u7a0bPython\u8173\u672c\u6703\u6839\u64da\u7248\u865f\u5b9a\u7fa9\u53bb\u5c0b\u627eprebuilt\u76ee\u9304\uff0c\u4e0d\u6539\u6703\u627e\u4e0d\u5230\u6a94\u6848\u3002","title":"\u4fee\u6539\u7248\u672c\u865f\u78bc"},{"location":"python/cefpython_upgrade_cef/#_4","text":"\u57f7\u884c build.py xx.x \u6703\u9047\u5230\u5e7e\u500bC++\u7684\u7de8\u8b6f\u932f\u8aa4\uff0c\u6574\u7406\u5728\u4e0b\u65b9\uff1a","title":"\u5176\u4ed6\u7de8\u8b6f\u5931\u6557\u554f\u984c"},{"location":"python/cefpython_upgrade_cef/#cefpython_py39_fixedh","text":"\u4ee5\u6211\u4f7f\u7528\u7684Python\u7248\u672c\u70ba\u4f8b\uff0c\u537b\u4ecd\u56e0\u70baPY_MINOR_VERSION\u627e\u4e0d\u5230\u5b9a\u7fa9\u800c\u7de8\u8b6f\u5931\u6557\u3002\u6700\u7c21\u55ae\u7684\u65b9\u5f0f\u5c31\u662f\u76f4\u63a5\u628a #include \"../../build/build_cefpython/cefpython_py39_fixed.h\" \u653e\u5728\u6700\u5916\u5c64\uff0c\u4fdd\u8b49\u4e00\u5b9a\u53ef\u4ee5include\u5230\u3002","title":"\u627e\u4e0d\u5230 cefpython_py39_fixed.h:"},{"location":"python/cefpython_upgrade_cef/#cefrequestcallback-not-found","text":"\u5f9eCEF\u7684commit log\u53ef\u4ee5\u770b\u5230\u5df2\u7d93\u88ab CefCallback \u53d6\u4ee3\u4e86","title":"CefRequestCallback not found:"},{"location":"python/cefpython_upgrade_cef/#override-scoped_ptr-baseclosure-unknown-identifier","text":"\u9019\u985e\u554f\u984c\u90fd\u53ef\u4ee5\u7528CEF\u7684codebase\u6bd4\u8f03\uff0c\u62c9\u65b0\u7684\u7a0b\u5f0f\u78bc\u904e\u4f86\uff0c\u4e0d\u904e\u8981\u7528\u6bd4\u7684\uff0c\u4e0d\u80fd\u5168\u84cb\u6389\u3002","title":"OVERRIDE, scoped_ptr, base::Closure unknown identifier:"},{"location":"python/cefpython_upgrade_cef/#include-cefpython_appcpp","text":"#include \"client_handler/request_context_handler.h\" #include \"include/cef_callback.h\"","title":"\u65b0\u589einclude\u5230 cefpython_app.cpp:"},{"location":"python/line_login/","text":"\u4f7f\u7528 Line Login \u767b\u5165\u4f60\u7684\u670d\u52d9 Basic concept \u4ec0\u9ebc\u6642\u5019\u6703\u7528\u5230Line Login\uff1f\u5982\u679c\u8aaa\u4f60\u6c92\u6709\u6253\u7b97\u8981\u6c42\u4f7f\u7528\u8005\u8a3b\u518a\u4f60\u7684\u5e73\u53f0\uff0c\u8981\u505a\u5230\u985e\u4f3c\u5176\u4ed6\u7db2\u7ad9\u4e0a\u9762\u8b93\u4eba\u7528Google\u5e33\u865f\u767b\u5165\u7684\u65b9\u5f0f\u6642\u5c31\u53ef\u4ee5\u7528\u6b64API. \u904b\u4f5c\u65b9\u5f0f\u5716\u89e3\uff1a sequenceDiagram User->>Your_Service: Click the Line Login button. Your_Service->>Line_Auth: Redirect to Line Auth page. Line_Auth-->>Your_Service: Redirect to callback URL with code. Your_Service->>Line_Auth: Query user date with code. Line_Auth-->>Your_Service: Return payload with id token. Your_Service->>Line_Auth: Verify id token. Line_Auth-->>Your_Service: Return the credential data. loop Store Credential Your_Service->>Your_Service: Save user's data to database. end Your_Service-->>User: Login successfully! \u8a2d\u5b9a\u6d41\u7a0b\u8207\u53c3\u6578 \u5728\u4f60\u7684\u7db2\u9801\u4e0a\u653e\u7f6eLine Login\u6309\u9215\uff0c\u8b93\u4f7f\u7528\u8005\u53ef\u4ee5\u9ede \u9ede\u64ca\u4e4b\u5f8c \u91cd\u5c0e \u81f3https://access.line.me/oauth2/v2.1/authorize \u4e26\u52a0\u4e0a\u4ee5\u4e0b\u53c3\u6578 response_type\uff1acode \u6703\u56de\u50b3\u53c3\u6578\u540d code \u7684\u6388\u6b0a\u78bc client_id\uff1a\u4f60\u7684ChannelID redirect_uri\uff1a Callback URL\u9019\u662f\u5728Line Developer Console\u4e2d\u8a2d\u5b9a\u7684 state\uff1a\u81ea\u8a02\u9a57\u8b49\u78bc\uff0c\u4e5f\u53ef\u4ee5\u96a8\u4fbf\u586b scope\uff1a\u6b32\u53d6\u5f97 User \u7684\u8cc7\u6599\uff0c\u5982\u60f3\u53d6\u5f97 openid \u548c profile\uff0c\u586b\u5beb openid%20profile \u63a5\u8457\u4f60\u8981\u7528\u50b3\u56de\u4f86\u7684 Code \u518d\u767c\u4e00\u6b21Request https://api.line.me/oauth2/v2.1/token grant_type: \u9810\u8a2d\u586b authorization_code code: \u525b\u525b\u50b3\u56de\u4f86\u7684 code redirect_uri: \u8ddf\u525b\u525b\u4e00\u6a23\u7684 Callback URL client_id: \u4f60\u7684ChannelID client_secret: \u4f60\u7684Secret, \u5728Line Developer Console\u53ef\u4ee5\u67e5\u5230 \u6700\u5f8c\u767c\u4e00\u6b21 Reqest \u9a57\u8b49\u8cc7\u6599 https://api.line.me/oauth2/v2.1/verify id_token: \u524d\u4e00\u6b21\u56de\u50b3\u7684JSON data\u4e2d\u7684 id_token \u6b04\u4f4d client_id\uff1a\u4f60\u7684ChannelID \u7bc4\u4f8b Authorize Request Response Get Token","title":"\u4f7f\u7528 Line Login \u767b\u5165\u4f60\u7684\u670d\u52d9"},{"location":"python/line_login/#line-login","text":"","title":"\u4f7f\u7528 Line Login \u767b\u5165\u4f60\u7684\u670d\u52d9"},{"location":"python/line_login/#basic-concept","text":"\u4ec0\u9ebc\u6642\u5019\u6703\u7528\u5230Line Login\uff1f\u5982\u679c\u8aaa\u4f60\u6c92\u6709\u6253\u7b97\u8981\u6c42\u4f7f\u7528\u8005\u8a3b\u518a\u4f60\u7684\u5e73\u53f0\uff0c\u8981\u505a\u5230\u985e\u4f3c\u5176\u4ed6\u7db2\u7ad9\u4e0a\u9762\u8b93\u4eba\u7528Google\u5e33\u865f\u767b\u5165\u7684\u65b9\u5f0f\u6642\u5c31\u53ef\u4ee5\u7528\u6b64API. \u904b\u4f5c\u65b9\u5f0f\u5716\u89e3\uff1a sequenceDiagram User->>Your_Service: Click the Line Login button. Your_Service->>Line_Auth: Redirect to Line Auth page. Line_Auth-->>Your_Service: Redirect to callback URL with code. Your_Service->>Line_Auth: Query user date with code. Line_Auth-->>Your_Service: Return payload with id token. Your_Service->>Line_Auth: Verify id token. Line_Auth-->>Your_Service: Return the credential data. loop Store Credential Your_Service->>Your_Service: Save user's data to database. end Your_Service-->>User: Login successfully!","title":"Basic concept"},{"location":"python/line_login/#_1","text":"\u5728\u4f60\u7684\u7db2\u9801\u4e0a\u653e\u7f6eLine Login\u6309\u9215\uff0c\u8b93\u4f7f\u7528\u8005\u53ef\u4ee5\u9ede \u9ede\u64ca\u4e4b\u5f8c \u91cd\u5c0e \u81f3https://access.line.me/oauth2/v2.1/authorize \u4e26\u52a0\u4e0a\u4ee5\u4e0b\u53c3\u6578 response_type\uff1acode \u6703\u56de\u50b3\u53c3\u6578\u540d code \u7684\u6388\u6b0a\u78bc client_id\uff1a\u4f60\u7684ChannelID redirect_uri\uff1a Callback URL\u9019\u662f\u5728Line Developer Console\u4e2d\u8a2d\u5b9a\u7684 state\uff1a\u81ea\u8a02\u9a57\u8b49\u78bc\uff0c\u4e5f\u53ef\u4ee5\u96a8\u4fbf\u586b scope\uff1a\u6b32\u53d6\u5f97 User \u7684\u8cc7\u6599\uff0c\u5982\u60f3\u53d6\u5f97 openid \u548c profile\uff0c\u586b\u5beb openid%20profile \u63a5\u8457\u4f60\u8981\u7528\u50b3\u56de\u4f86\u7684 Code \u518d\u767c\u4e00\u6b21Request https://api.line.me/oauth2/v2.1/token grant_type: \u9810\u8a2d\u586b authorization_code code: \u525b\u525b\u50b3\u56de\u4f86\u7684 code redirect_uri: \u8ddf\u525b\u525b\u4e00\u6a23\u7684 Callback URL client_id: \u4f60\u7684ChannelID client_secret: \u4f60\u7684Secret, \u5728Line Developer Console\u53ef\u4ee5\u67e5\u5230 \u6700\u5f8c\u767c\u4e00\u6b21 Reqest \u9a57\u8b49\u8cc7\u6599 https://api.line.me/oauth2/v2.1/verify id_token: \u524d\u4e00\u6b21\u56de\u50b3\u7684JSON data\u4e2d\u7684 id_token \u6b04\u4f4d client_id\uff1a\u4f60\u7684ChannelID","title":"\u8a2d\u5b9a\u6d41\u7a0b\u8207\u53c3\u6578"},{"location":"python/line_login/#_2","text":"","title":"\u7bc4\u4f8b"},{"location":"python/line_login/#authorize","text":"","title":"Authorize"},{"location":"python/line_login/#request","text":"","title":"Request"},{"location":"python/line_login/#response","text":"","title":"Response"},{"location":"python/line_login/#get-token","text":"","title":"Get Token"},{"location":"python/pyinstaller/","text":"PyInstaller - A useful to create Windows executable writting by Python. Update\uff1a 2022/6/23 It's painful when we want to distribute our python tools to other environment, we cannot make sure the Python version is the same with our machine, and the dependencies are also need to be installed in order to run perfectly, the following are several useful commands when creating Windows executable. Basic command : pyinstaller -F .\\app.py It will generate an executable called app.exe Want to append data? : pyinstaller -F .\\app.py --add-data \" ; \" If you want to append your data to the binary, add --add-data to the parameter and: * is the source path in your current project. * is the path where it will extract to. Issues of installing on Ubuntu 18.04 You might get the warning of zlib-dev is not installed when doing pip3 install pyinstaller , type the command below to install the necessary package: sudo apt install zlib1g-dev Once pyinstall was installed, you'll get pyinstall command not found if you try to type pyinstaller in the console, the default installation path is ~/.local/bin/pyinstaller , you can create a symbolic link by: sudo ln -s ~/.local/bin/pyinstaller /usr/bin/pyinstaller","title":"PyInstaller"},{"location":"python/pyinstaller/#pyinstaller-a-useful-to-create-windows-executable-writting-by-python","text":"Update\uff1a 2022/6/23 It's painful when we want to distribute our python tools to other environment, we cannot make sure the Python version is the same with our machine, and the dependencies are also need to be installed in order to run perfectly, the following are several useful commands when creating Windows executable. Basic command : pyinstaller -F .\\app.py It will generate an executable called app.exe Want to append data? : pyinstaller -F .\\app.py --add-data \" ; \" If you want to append your data to the binary, add --add-data to the parameter and: * is the source path in your current project. * is the path where it will extract to. Issues of installing on Ubuntu 18.04 You might get the warning of zlib-dev is not installed when doing pip3 install pyinstaller , type the command below to install the necessary package: sudo apt install zlib1g-dev Once pyinstall was installed, you'll get pyinstall command not found if you try to type pyinstaller in the console, the default installation path is ~/.local/bin/pyinstaller , you can create a symbolic link by: sudo ln -s ~/.local/bin/pyinstaller /usr/bin/pyinstaller","title":"PyInstaller - A useful to create Windows executable writting by Python."},{"location":"python/troubleshooting/","text":"Windows Cannot run python on Git for Windows - Bash Solution: Paste the command below in a bash window, then it will work. $ echo \"alias python='winpty python.exe'\" >> ~/.bashrc . ~/.bashrc How to run different python version on Windows? py --list will list all available python versions on current machine. py - will run command with specified version. $ py --list * Active venv -V:3.12 Python 3.12 (64-bit) -V:3.10 Python 3.10 (64-bit) $ py -3.10 -m venv .venv","title":"Troubleshooting"},{"location":"python/troubleshooting/#windows","text":"Cannot run python on Git for Windows - Bash Solution: Paste the command below in a bash window, then it will work. $ echo \"alias python='winpty python.exe'\" >> ~/.bashrc . ~/.bashrc How to run different python version on Windows? py --list will list all available python versions on current machine. py - will run command with specified version. $ py --list * Active venv -V:3.12 Python 3.12 (64-bit) -V:3.10 Python 3.10 (64-bit) $ py -3.10 -m venv .venv","title":"Windows"},{"location":"raspberry_pi/nextcloud/","text":"Here is the tutorial to setup Nextcloud on Raspberry Pi. Environment Raspberry Pi 3b 16GB sd card Raspbian 11 I recommend to flash Raspbian via Raspberry Pi Imager instead of using ubuntu Nextcloud image, because my raspberry pi always run into the maintanence mode in the next boot. Setting flow Flash Raspbin 11 to sd card and boot machine Install docker 2-1. Install by convinent script 2-2. Allow normal user to execute docker Setup nextcloud 3-1. Pull image 3-2. Assign volume to container to persist data Allow normal user to execute docker After installed docker, run the command below to grant a non-prileged user to use docker: sudo apt install -y uidmap dockerd-rootless-setuptool.sh install Start Nextcloud service... docker run --name nc -d -p 8080:80 arm64v8/nextcloud Assign volume to container to persist data Create some folders mkdir -p nc/data && mkdir -p nc/config Bind folders via -v command docker run --name nc -d -p 8080:80 -v $(pwd)/nc/data:/var/www/html/data -v $(pwd)/nc/config:/var/www/html/config arm64v8/nextcloud Nextcloud will put runtime data including photos, sqlite database and necessary information here, and config folder is used to hold current setting status. Troubleshooting - uid/gid doesn't exist However, the uid and gid data and config folders doesn't exist on your host: $ ll drwxr-xr-x 2 100032 100032 4096 Sep 27 10:34 config drwxr-xr-x 2 100032 100032 4096 Sep 27 12:08 data I tried to add the sub command -u $(id -u ${USER}):$(id -g ${USER}) , but it doesn't help, and the container will stop automatically with no reason, you might think that we could copy these two folders with sudo , but the privilege setting might be lost. So I create a new user and group with specified id(here the id is 100032): $ sudo groupadd -g 100032 nextcloud $ sudo useradd -u 100032 nextcloud $ sudo passwd nextcloud $ ll drwxr-xr-x 2 nextcloud nextcloud 4096 Sep 27 12:35 config drwxrwx--- 4 nextcloud nextcloud 4096 Sep 27 12:45 data Then you can switch to user nextcloud by su nextcloud and check the content inside those folders.","title":"Nextcloud"},{"location":"raspberry_pi/nextcloud/#environment","text":"Raspberry Pi 3b 16GB sd card Raspbian 11 I recommend to flash Raspbian via Raspberry Pi Imager instead of using ubuntu Nextcloud image, because my raspberry pi always run into the maintanence mode in the next boot.","title":"Environment"},{"location":"raspberry_pi/nextcloud/#setting-flow","text":"Flash Raspbin 11 to sd card and boot machine Install docker 2-1. Install by convinent script 2-2. Allow normal user to execute docker Setup nextcloud 3-1. Pull image 3-2. Assign volume to container to persist data","title":"Setting flow"},{"location":"raspberry_pi/nextcloud/#allow-normal-user-to-execute-docker","text":"After installed docker, run the command below to grant a non-prileged user to use docker: sudo apt install -y uidmap dockerd-rootless-setuptool.sh install Start Nextcloud service... docker run --name nc -d -p 8080:80 arm64v8/nextcloud","title":"Allow normal user to execute docker"},{"location":"raspberry_pi/nextcloud/#assign-volume-to-container-to-persist-data","text":"Create some folders mkdir -p nc/data && mkdir -p nc/config Bind folders via -v command docker run --name nc -d -p 8080:80 -v $(pwd)/nc/data:/var/www/html/data -v $(pwd)/nc/config:/var/www/html/config arm64v8/nextcloud Nextcloud will put runtime data including photos, sqlite database and necessary information here, and config folder is used to hold current setting status. Troubleshooting - uid/gid doesn't exist However, the uid and gid data and config folders doesn't exist on your host: $ ll drwxr-xr-x 2 100032 100032 4096 Sep 27 10:34 config drwxr-xr-x 2 100032 100032 4096 Sep 27 12:08 data I tried to add the sub command -u $(id -u ${USER}):$(id -g ${USER}) , but it doesn't help, and the container will stop automatically with no reason, you might think that we could copy these two folders with sudo , but the privilege setting might be lost. So I create a new user and group with specified id(here the id is 100032): $ sudo groupadd -g 100032 nextcloud $ sudo useradd -u 100032 nextcloud $ sudo passwd nextcloud $ ll drwxr-xr-x 2 nextcloud nextcloud 4096 Sep 27 12:35 config drwxrwx--- 4 nextcloud nextcloud 4096 Sep 27 12:45 data Then you can switch to user nextcloud by su nextcloud and check the content inside those folders.","title":"Assign volume to container to persist data"},{"location":"raspberry_pi/pikvm/","text":"Environment Raspberry Pi 4B 16GB sd card (8GB is acceptable) Video capture (HDMI to USB) Signal split(Type C => Power + OTG) PiKVM OS If you are using USB HDMI capture, please download HDMI-to-USB dongle image Setup flow Flash PiKVM image to SD card Connect Pi 4 with a target machine Boot your Pi 4 Open the browser and visit the URL assigned to PiKVM Default user name and password to login WEB is admin/admin Mount virtual drive to the target machine Create a img file Format the img file as vfat Mount img to /mnt Copy files to /mnt Umount $ dd if=/dev/zero of=disk.img bs=1M count=64 $ mkfs.vfat -F 32 ./disk.img $ mount ./disk.img /mnt $ cp -fr <your data> /mnt $ umount /mnt","title":"PiKVM"},{"location":"raspberry_pi/pikvm/#environment","text":"Raspberry Pi 4B 16GB sd card (8GB is acceptable) Video capture (HDMI to USB) Signal split(Type C => Power + OTG) PiKVM OS If you are using USB HDMI capture, please download HDMI-to-USB dongle image","title":"Environment"},{"location":"raspberry_pi/pikvm/#setup-flow","text":"Flash PiKVM image to SD card Connect Pi 4 with a target machine Boot your Pi 4 Open the browser and visit the URL assigned to PiKVM Default user name and password to login WEB is admin/admin","title":"Setup flow"},{"location":"raspberry_pi/pikvm/#mount-virtual-drive-to-the-target-machine","text":"Create a img file Format the img file as vfat Mount img to /mnt Copy files to /mnt Umount $ dd if=/dev/zero of=disk.img bs=1M count=64 $ mkfs.vfat -F 32 ./disk.img $ mount ./disk.img /mnt $ cp -fr <your data> /mnt $ umount /mnt","title":"Mount virtual drive to the target machine"},{"location":"snippet/random_negative_int/","text":"Generate random number contains negative values int a = ( rand () % 2000 ) - 1000 ; // -1000 ~ 999","title":"Generate random negative integer"},{"location":"snippet/random_negative_int/#generate-random-number-contains-negative-values","text":"int a = ( rand () % 2000 ) - 1000 ; // -1000 ~ 999","title":"Generate random number contains negative values"},{"location":"spdx/intro/","text":"Introduction to SPDX Term Releationship: can be used to indicate relationships between Packages, such as dependency relationships. Package information section: Packages are an abstract concept that can be used to refer to any distribution of software, typically consisting of one or more files and capable of containing sub-packages. Cardinality: Optional, one or many. File information section: It provides important meta information about a given file including licenses and copyright. Cardinality: Optional, one or many. Files are assumed to be associated with the Package Information that immediately precedes it, if a package exists. If a File is not part of any package, it shall precede any Package Information section reference in the SPDX document. The first field to start off the description of a File shall be the File Name in tag:value format. License Identifier A document with a single license is defined by SPDX-License-Identifier , for example: SPDX-License-Identifier: CDDL-1.0+ SPDX-License-Identifier: MIT Some commonly found licenses have been defined in the SPDX License List , it represents in a short form. However, we might want to declare a private license, so a user defined license would be represented by LicenseRef- . ( idstring = 1*(ALPHA / DIGIT / \"-\" / \".\" ) ). If a license of a file was claimed as LicenseRef-2 , and its license was defined in other file, then the copy of actual text will be filled in the field -- ExtractedText . LicenseID: LicenseRef-2 ExtractedText: <text>This package includes the GRDDL parser developed by Hewlett Packard under the following license: \u00a9 Copyright 2007 Hewlett-Packard Development Company, LP Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. The name of the author may not be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. </text>","title":"Intro"},{"location":"spdx/intro/#introduction-to-spdx","text":"","title":"Introduction to SPDX"},{"location":"spdx/intro/#term","text":"Releationship: can be used to indicate relationships between Packages, such as dependency relationships. Package information section: Packages are an abstract concept that can be used to refer to any distribution of software, typically consisting of one or more files and capable of containing sub-packages. Cardinality: Optional, one or many. File information section: It provides important meta information about a given file including licenses and copyright. Cardinality: Optional, one or many. Files are assumed to be associated with the Package Information that immediately precedes it, if a package exists. If a File is not part of any package, it shall precede any Package Information section reference in the SPDX document. The first field to start off the description of a File shall be the File Name in tag:value format.","title":"Term"},{"location":"spdx/intro/#license-identifier","text":"A document with a single license is defined by SPDX-License-Identifier , for example: SPDX-License-Identifier: CDDL-1.0+ SPDX-License-Identifier: MIT Some commonly found licenses have been defined in the SPDX License List , it represents in a short form. However, we might want to declare a private license, so a user defined license would be represented by LicenseRef- . ( idstring = 1*(ALPHA / DIGIT / \"-\" / \".\" ) ). If a license of a file was claimed as LicenseRef-2 , and its license was defined in other file, then the copy of actual text will be filled in the field -- ExtractedText . LicenseID: LicenseRef-2 ExtractedText: <text>This package includes the GRDDL parser developed by Hewlett Packard under the following license: \u00a9 Copyright 2007 Hewlett-Packard Development Company, LP Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. The name of the author may not be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. </text>","title":"License Identifier"},{"location":"sqlite/run_cmd_wo_into_shell/","text":"SQLite - How to execute a sql command without opening the interactive shell Update\uff1a 2022/7/7 Environment OS: Windows/Linux Tool: Sqlite3 Shell Steps to setup Download the sqlite3 binary Extract to the environment path Open command line prompt and execute: sqlite3 db \"SQL Command\"","title":"Execute SQLite command without openning interactive shell"},{"location":"sqlite/run_cmd_wo_into_shell/#sqlite-how-to-execute-a-sql-command-without-opening-the-interactive-shell","text":"Update\uff1a 2022/7/7 Environment OS: Windows/Linux Tool: Sqlite3 Shell Steps to setup Download the sqlite3 binary Extract to the environment path Open command line prompt and execute: sqlite3 db \"SQL Command\"","title":"SQLite - How to execute a sql command without opening the interactive shell"}]}